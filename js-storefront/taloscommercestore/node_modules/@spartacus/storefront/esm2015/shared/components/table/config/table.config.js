import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import { BREAKPOINT } from '../../../../layout/config/layout-config';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
/**
 * The `TableConfig` provides a table configurations for specific table types. You can define
 * an all-screen table structure as well as a breakpoint specific table structure. The various
 * table structures are merged from small to large screen configurations, depending on the users
 * screen size.
 *
 * The `table.type` is used as a key to distinguish the various table configurations in the application.
 */
export class TableConfig {
}
TableConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TableConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: TableConfig, providedIn: "root" });
TableConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy8iLCJzb3VyY2VzIjpbInNoYXJlZC9jb21wb25lbnRzL3RhYmxlL2NvbmZpZy90YWJsZS5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7QUFHckU7Ozs7Ozs7R0FPRztBQUtILE1BQU0sT0FBZ0IsV0FBVzs7OztZQUpoQyxVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07Z0JBQ2xCLFdBQVcsRUFBRSxNQUFNO2FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IEJSRUFLUE9JTlQgfSBmcm9tICcuLi8uLi8uLi8uLi9sYXlvdXQvY29uZmlnL2xheW91dC1jb25maWcnO1xuaW1wb3J0IHsgVGFibGVTdHJ1Y3R1cmVDb25maWd1cmF0aW9uIH0gZnJvbSAnLi4vdGFibGUubW9kZWwnO1xuXG4vKipcbiAqIFRoZSBgVGFibGVDb25maWdgIHByb3ZpZGVzIGEgdGFibGUgY29uZmlndXJhdGlvbnMgZm9yIHNwZWNpZmljIHRhYmxlIHR5cGVzLiBZb3UgY2FuIGRlZmluZVxuICogYW4gYWxsLXNjcmVlbiB0YWJsZSBzdHJ1Y3R1cmUgYXMgd2VsbCBhcyBhIGJyZWFrcG9pbnQgc3BlY2lmaWMgdGFibGUgc3RydWN0dXJlLiBUaGUgdmFyaW91c1xuICogdGFibGUgc3RydWN0dXJlcyBhcmUgbWVyZ2VkIGZyb20gc21hbGwgdG8gbGFyZ2Ugc2NyZWVuIGNvbmZpZ3VyYXRpb25zLCBkZXBlbmRpbmcgb24gdGhlIHVzZXJzXG4gKiBzY3JlZW4gc2l6ZS5cbiAqXG4gKiBUaGUgYHRhYmxlLnR5cGVgIGlzIHVzZWQgYXMgYSBrZXkgdG8gZGlzdGluZ3Vpc2ggdGhlIHZhcmlvdXMgdGFibGUgY29uZmlndXJhdGlvbnMgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVGFibGVDb25maWcge1xuICB0YWJsZT86IHtcbiAgICBbdGFibGVUeXBlOiBzdHJpbmddOiBSZXNwb25zaXZlVGFibGVDb25maWd1cmF0aW9uO1xuICB9O1xuICB0YWJsZU9wdGlvbnM/OiB7XG4gICAgLyoqXG4gICAgICogR2xvYmFsIGNvbXBvbmVudCB0byByZW5kZXIgdGFibGUgaGVhZGVyIF9jb250ZW50XyAoYDx0aD4uLi48L3RoPmApLiBBIHNwZWNpZmljIGNvbXBvbmVudFxuICAgICAqIGNhbiBiZSBjb25maWd1cmVkIGFsdGVybmF0aXZlbHkgcGVyIHRhYmxlIG9yIHRhYmxlIGZpZWxkLlxuICAgICAqL1xuICAgIGhlYWRlckNvbXBvbmVudD86IFR5cGU8YW55PjtcblxuICAgIC8qKlxuICAgICAqIEdsb2JhbCBjb21wb25lbnQgdG8gcmVuZGVyIHRhYmxlIGNlbGwgX2NvbnRlbnRfIChgPHRkPi4uLjwvdGQ+YCkuIEEgc3BlY2lmaWMgY29tcG9uZW50IHBlclxuICAgICAqIGZpZWxkIGNhbiBiZSBjb25maWd1cmVkIGFsdGVybmF0aXZlbHkuXG4gICAgICpcbiAgICAgKiBJZiBubyBjb21wb25lbnQgaXMgYXZhaWxhYmxlLCB0aGUgdGFibGUgY29udGVudCB3aWxsIHJlbmRlciBhcy1pcy5cbiAgICAgKi9cbiAgICBkYXRhQ29tcG9uZW50PzogVHlwZTxhbnk+O1xuICB9O1xufVxuXG4vKipcbiAqIEhlbHBlciBjb25maWd1cmF0aW9uIHRvIGludHJvZHVjZSBicmVha3BvaW50IHNwZWNpZmljIHRhYmxlIGNvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmVzcG9uc2l2ZVRhYmxlQ29uZmlndXJhdGlvblxuICBleHRlbmRzIFRhYmxlU3RydWN0dXJlQ29uZmlndXJhdGlvbiB7XG4gIC8qKiBUaGUgdGFibGUgY29uZmlndXJhdGlvbnMgZm9yIGFsbCBzY3JlZW5zICovXG4gIFtCUkVBS1BPSU5ULnhsXT86IFRhYmxlU3RydWN0dXJlQ29uZmlndXJhdGlvbjtcbiAgLyoqIFRoZSB0YWJsZSBjb25maWd1cmF0aW9ucyBmb3IgbGFyZ2Ugc2NyZWVucyBhbmQgc21hbGxlciAqL1xuICBbQlJFQUtQT0lOVC5sZ10/OiBUYWJsZVN0cnVjdHVyZUNvbmZpZ3VyYXRpb247XG4gIC8qKiBUaGUgdGFibGUgY29uZmlndXJhdGlvbnMgZm9yIG1lZGl1bSBzY3JlZW5zIGFuZCBzbWFsbGVyICovXG4gIFtCUkVBS1BPSU5ULm1kXT86IFRhYmxlU3RydWN0dXJlQ29uZmlndXJhdGlvbjtcbiAgLyoqIFRoZSB0YWJsZSBjb25maWd1cmF0aW9ucyBmb3Igc21hbGwgc2NyZWVucyBhbmQgc21hbGxlciAqL1xuICBbQlJFQUtQT0lOVC5zbV0/OiBUYWJsZVN0cnVjdHVyZUNvbmZpZ3VyYXRpb247XG4gIC8qKiBUaGUgdGFibGUgY29uZmlndXJhdGlvbnMgZm9yIGV4dHJhIHNtYWxsIHNjcmVlbnMgKi9cbiAgW0JSRUFLUE9JTlQueHNdPzogVGFibGVTdHJ1Y3R1cmVDb25maWd1cmF0aW9uO1xufVxuIl19