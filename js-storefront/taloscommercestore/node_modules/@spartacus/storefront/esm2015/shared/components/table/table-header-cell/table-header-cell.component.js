import { ChangeDetectionStrategy, Component } from '@angular/core';
import { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';
export class TableHeaderCellComponent {
    constructor(outlet) {
        this.outlet = outlet;
    }
    /**
     * Returns the static label for the given field, if available.
     */
    get header() {
        var _a;
        if (typeof ((_a = this.fieldOptions) === null || _a === void 0 ? void 0 : _a.label) === 'string') {
            return this.fieldOptions.label;
        }
    }
    /**
     * Returns the localized label for the given field.
     *
     * The localized label is either driven by the configured `label.i18nKey`
     * or concatenated by the table `type` and field `key`:
     *
     * `[tableType].[fieldKey]`
     *
     * The localized header can be translated with the `cxTranslate` pipe or `TranslationService`.
     */
    get localizedHeader() {
        var _a, _b;
        return (((_b = (_a = this.fieldOptions) === null || _a === void 0 ? void 0 : _a.label) === null || _b === void 0 ? void 0 : _b.i18nKey) ||
            `${this.i18nRoot}.${this.field}`);
    }
    get fieldOptions() {
        var _a, _b, _c;
        return (_c = (_b = (_a = this.outlet) === null || _a === void 0 ? void 0 : _a.context._options) === null || _b === void 0 ? void 0 : _b.cells) === null || _c === void 0 ? void 0 : _c[this.field];
    }
    get field() {
        var _a, _b;
        return (_b = (_a = this.outlet) === null || _a === void 0 ? void 0 : _a.context) === null || _b === void 0 ? void 0 : _b._field;
    }
    get type() {
        var _a, _b;
        return (_b = (_a = this.outlet) === null || _a === void 0 ? void 0 : _a.context) === null || _b === void 0 ? void 0 : _b._type;
    }
    get i18nRoot() {
        var _a, _b;
        return (_b = (_a = this.outlet) === null || _a === void 0 ? void 0 : _a.context) === null || _b === void 0 ? void 0 : _b._i18nRoot;
    }
}
TableHeaderCellComponent.decorators = [
    { type: Component, args: [{
                selector: 'cx-table-header-cell',
                template: `{{ header || (localizedHeader | cxTranslate) }}`,
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
TableHeaderCellComponent.ctorParameters = () => [
    { type: OutletContextData }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaGVhZGVyLWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy8iLCJzb3VyY2VzIjpbInNoYXJlZC9jb21wb25lbnRzL3RhYmxlL3RhYmxlLWhlYWRlci1jZWxsL3RhYmxlLWhlYWRlci1jZWxsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBWWxGLE1BQU0sT0FBTyx3QkFBd0I7SUFDbkMsWUFBc0IsTUFBbUQ7UUFBbkQsV0FBTSxHQUFOLE1BQU0sQ0FBNkM7SUFBRyxDQUFDO0lBRTdFOztPQUVHO0lBQ0gsSUFBSSxNQUFNOztRQUNSLElBQUksY0FBTyxJQUFJLENBQUMsWUFBWSwwQ0FBRSxLQUFLLENBQUEsS0FBSyxRQUFRLEVBQUU7WUFDaEQsT0FBZSxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQztTQUN4QztJQUNILENBQUM7SUFFRDs7Ozs7Ozs7O09BU0c7SUFDSCxJQUFJLGVBQWU7O1FBQ2pCLE9BQU8sQ0FDTCxPQUFDLE1BQUEsSUFBSSxDQUFDLFlBQVksMENBQUUsS0FBcUIsMENBQUUsT0FBTztZQUNsRCxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUNqQyxDQUFDO0lBQ0osQ0FBQztJQUVELElBQWMsWUFBWTs7UUFDeEIseUJBQU8sSUFBSSxDQUFDLE1BQU0sMENBQUUsT0FBTyxDQUFDLFFBQVEsMENBQUUsS0FBSywwQ0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFO0lBQzVELENBQUM7SUFFRCxJQUFjLEtBQUs7O1FBQ2pCLG1CQUFPLElBQUksQ0FBQyxNQUFNLDBDQUFFLE9BQU8sMENBQUUsTUFBTSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFjLElBQUk7O1FBQ2hCLG1CQUFPLElBQUksQ0FBQyxNQUFNLDBDQUFFLE9BQU8sMENBQUUsS0FBSyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFjLFFBQVE7O1FBQ3BCLG1CQUFPLElBQUksQ0FBQyxNQUFNLDBDQUFFLE9BQU8sMENBQUUsU0FBUyxDQUFDO0lBQ3pDLENBQUM7OztZQWhERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsUUFBUSxFQUFFLGlEQUFpRDtnQkFDM0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7OztZQVhRLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE91dGxldENvbnRleHREYXRhIH0gZnJvbSAnLi4vLi4vLi4vLi4vY21zLXN0cnVjdHVyZS9vdXRsZXQvb3V0bGV0Lm1vZGVsJztcbmltcG9ydCB7XG4gIFRhYmxlRmllbGRPcHRpb25zLFxuICBUYWJsZUhlYWRlcixcbiAgVGFibGVIZWFkZXJPdXRsZXRDb250ZXh0LFxufSBmcm9tICcuLi90YWJsZS5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LXRhYmxlLWhlYWRlci1jZWxsJyxcbiAgdGVtcGxhdGU6IGB7eyBoZWFkZXIgfHwgKGxvY2FsaXplZEhlYWRlciB8IGN4VHJhbnNsYXRlKSB9fWAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZUhlYWRlckNlbGxDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgb3V0bGV0OiBPdXRsZXRDb250ZXh0RGF0YTxUYWJsZUhlYWRlck91dGxldENvbnRleHQ+KSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBzdGF0aWMgbGFiZWwgZm9yIHRoZSBnaXZlbiBmaWVsZCwgaWYgYXZhaWxhYmxlLlxuICAgKi9cbiAgZ2V0IGhlYWRlcigpOiBzdHJpbmcge1xuICAgIGlmICh0eXBlb2YgdGhpcy5maWVsZE9wdGlvbnM/LmxhYmVsID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIDxzdHJpbmc+dGhpcy5maWVsZE9wdGlvbnMubGFiZWw7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGxvY2FsaXplZCBsYWJlbCBmb3IgdGhlIGdpdmVuIGZpZWxkLlxuICAgKlxuICAgKiBUaGUgbG9jYWxpemVkIGxhYmVsIGlzIGVpdGhlciBkcml2ZW4gYnkgdGhlIGNvbmZpZ3VyZWQgYGxhYmVsLmkxOG5LZXlgXG4gICAqIG9yIGNvbmNhdGVuYXRlZCBieSB0aGUgdGFibGUgYHR5cGVgIGFuZCBmaWVsZCBga2V5YDpcbiAgICpcbiAgICogYFt0YWJsZVR5cGVdLltmaWVsZEtleV1gXG4gICAqXG4gICAqIFRoZSBsb2NhbGl6ZWQgaGVhZGVyIGNhbiBiZSB0cmFuc2xhdGVkIHdpdGggdGhlIGBjeFRyYW5zbGF0ZWAgcGlwZSBvciBgVHJhbnNsYXRpb25TZXJ2aWNlYC5cbiAgICovXG4gIGdldCBsb2NhbGl6ZWRIZWFkZXIoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKFxuICAgICAgKHRoaXMuZmllbGRPcHRpb25zPy5sYWJlbCBhcyBUYWJsZUhlYWRlcik/LmkxOG5LZXkgfHxcbiAgICAgIGAke3RoaXMuaTE4blJvb3R9LiR7dGhpcy5maWVsZH1gXG4gICAgKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXQgZmllbGRPcHRpb25zKCk6IFRhYmxlRmllbGRPcHRpb25zIHtcbiAgICByZXR1cm4gdGhpcy5vdXRsZXQ/LmNvbnRleHQuX29wdGlvbnM/LmNlbGxzPy5bdGhpcy5maWVsZF07XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0IGZpZWxkKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMub3V0bGV0Py5jb250ZXh0Py5fZmllbGQ7XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0IHR5cGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5vdXRsZXQ/LmNvbnRleHQ/Ll90eXBlO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldCBpMThuUm9vdCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLm91dGxldD8uY29udGV4dD8uX2kxOG5Sb290O1xuICB9XG59XG4iXX0=