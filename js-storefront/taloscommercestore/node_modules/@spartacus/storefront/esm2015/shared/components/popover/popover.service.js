import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class PopoverService {
    /**
     * For a11y improvements method returns different `FocusConfig`
     * based on which event popover was triggered.
     */
    getFocusConfig(event, appendToBody) {
        let config = {};
        if (event instanceof KeyboardEvent) {
            if ((event.code === 'Enter' || event.code === 'Space') && appendToBody) {
                config = {
                    trap: true,
                    block: true,
                    focusOnEscape: false,
                    autofocus: true,
                };
            }
        }
        return config;
    }
    setFocusOnElement(element, focusConfig, appendToBody) {
        if (focusConfig && appendToBody) {
            element.nativeElement.focus();
        }
    }
}
PopoverService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PopoverService_Factory() { return new PopoverService(); }, token: PopoverService, providedIn: "root" });
PopoverService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy8iLCJzb3VyY2VzIjpbInNoYXJlZC9jb21wb25lbnRzL3BvcG92ZXIvcG9wb3Zlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBYyxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTXZELE1BQU0sT0FBTyxjQUFjO0lBQ3pCOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxLQUFZLEVBQUUsWUFBcUI7UUFDaEQsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBRWhCLElBQUksS0FBSyxZQUFZLGFBQWEsRUFBRTtZQUNsQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxPQUFPLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUMsSUFBSSxZQUFZLEVBQUU7Z0JBQ3RFLE1BQU0sR0FBRztvQkFDUCxJQUFJLEVBQUUsSUFBSTtvQkFDVixLQUFLLEVBQUUsSUFBSTtvQkFDWCxhQUFhLEVBQUUsS0FBSztvQkFDcEIsU0FBUyxFQUFFLElBQUk7aUJBQ2hCLENBQUM7YUFDSDtTQUNGO1FBRUQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELGlCQUFpQixDQUNmLE9BQW1CLEVBQ25CLFdBQXdCLEVBQ3hCLFlBQXNCO1FBRXRCLElBQUksV0FBVyxJQUFJLFlBQVksRUFBRTtZQUMvQixPQUFPLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQy9CO0lBQ0gsQ0FBQzs7OztZQWpDRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb2N1c0NvbmZpZyB9IGZyb20gJy4uLy4uLy4uL2xheW91dC9hMTF5L2tleWJvYXJkLWZvY3VzL2tleWJvYXJkLWZvY3VzLm1vZGVsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFBvcG92ZXJTZXJ2aWNlIHtcbiAgLyoqXG4gICAqIEZvciBhMTF5IGltcHJvdmVtZW50cyBtZXRob2QgcmV0dXJucyBkaWZmZXJlbnQgYEZvY3VzQ29uZmlnYFxuICAgKiBiYXNlZCBvbiB3aGljaCBldmVudCBwb3BvdmVyIHdhcyB0cmlnZ2VyZWQuXG4gICAqL1xuICBnZXRGb2N1c0NvbmZpZyhldmVudDogRXZlbnQsIGFwcGVuZFRvQm9keTogYm9vbGVhbik6IEZvY3VzQ29uZmlnIHtcbiAgICBsZXQgY29uZmlnID0ge307XG5cbiAgICBpZiAoZXZlbnQgaW5zdGFuY2VvZiBLZXlib2FyZEV2ZW50KSB7XG4gICAgICBpZiAoKGV2ZW50LmNvZGUgPT09ICdFbnRlcicgfHwgZXZlbnQuY29kZSA9PT0gJ1NwYWNlJykgJiYgYXBwZW5kVG9Cb2R5KSB7XG4gICAgICAgIGNvbmZpZyA9IHtcbiAgICAgICAgICB0cmFwOiB0cnVlLFxuICAgICAgICAgIGJsb2NrOiB0cnVlLFxuICAgICAgICAgIGZvY3VzT25Fc2NhcGU6IGZhbHNlLFxuICAgICAgICAgIGF1dG9mb2N1czogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY29uZmlnO1xuICB9XG5cbiAgc2V0Rm9jdXNPbkVsZW1lbnQoXG4gICAgZWxlbWVudDogRWxlbWVudFJlZixcbiAgICBmb2N1c0NvbmZpZzogRm9jdXNDb25maWcsXG4gICAgYXBwZW5kVG9Cb2R5PzogYm9vbGVhblxuICApIHtcbiAgICBpZiAoZm9jdXNDb25maWcgJiYgYXBwZW5kVG9Cb2R5KSB7XG4gICAgICBlbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==