/** The element attribute used to store the focus state */
export const FOCUS_ATTR = 'data-cx-focus';
/** The element attribute used to store the focus group state */
export const FOCUS_GROUP_ATTR = 'data-cx-focus-group';
export var TrapFocus;
(function (TrapFocus) {
    /**
     * Will trap the focus at the start of the focus group.
     */
    TrapFocus["start"] = "start";
    /**
     * Will trap the focus only at the end of the focus group.
     */
    TrapFocus["end"] = "end";
    /**
     * Will not trap the focus in both directions. This is actually not are
     * a great example of focus trap, but it will give the benefit of keyboard
     * tabbing by arrows.
     */
    TrapFocus["both"] = "both";
})(TrapFocus || (TrapFocus = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Ym9hcmQtZm9jdXMubW9kZWwuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvc3JjLyIsInNvdXJjZXMiOlsibGF5b3V0L2ExMXkva2V5Ym9hcmQtZm9jdXMva2V5Ym9hcmQtZm9jdXMubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMERBQTBEO0FBQzFELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxlQUFlLENBQUM7QUFDMUMsZ0VBQWdFO0FBQ2hFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLHFCQUFxQixDQUFDO0FBMEV0RCxNQUFNLENBQU4sSUFBWSxTQWVYO0FBZkQsV0FBWSxTQUFTO0lBQ25COztPQUVHO0lBQ0gsNEJBQWUsQ0FBQTtJQUNmOztPQUVHO0lBQ0gsd0JBQVcsQ0FBQTtJQUNYOzs7O09BSUc7SUFDSCwwQkFBYSxDQUFBO0FBQ2YsQ0FBQyxFQWZXLFNBQVMsS0FBVCxTQUFTLFFBZXBCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIFRoZSBlbGVtZW50IGF0dHJpYnV0ZSB1c2VkIHRvIHN0b3JlIHRoZSBmb2N1cyBzdGF0ZSAqL1xuZXhwb3J0IGNvbnN0IEZPQ1VTX0FUVFIgPSAnZGF0YS1jeC1mb2N1cyc7XG4vKiogVGhlIGVsZW1lbnQgYXR0cmlidXRlIHVzZWQgdG8gc3RvcmUgdGhlIGZvY3VzIGdyb3VwIHN0YXRlICovXG5leHBvcnQgY29uc3QgRk9DVVNfR1JPVVBfQVRUUiA9ICdkYXRhLWN4LWZvY3VzLWdyb3VwJztcblxuZXhwb3J0IGNvbnN0IGVudW0gTU9WRV9GT0NVUyB7XG4gIE5FWFQgPSAxLFxuICBQUkVWID0gLTEsXG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktaW50ZXJmYWNlXG5leHBvcnQgaW50ZXJmYWNlIEJhc2VGb2N1c0NvbmZpZyB7fVxuXG5leHBvcnQgaW50ZXJmYWNlIFZpc2libGVGb2N1c0NvbmZpZyB7XG4gIC8qKlxuICAgKiBXaGVuIHNldCB0byB0cnVlLCB0aGUgYG1vdXNlLWZvY3VzYCBjbGFzcyBpcyBhZGRlZCB0byB0aGUgaG9zdCBlbGVtZW50LFxuICAgKiBpbmRpY2F0aW5nIHRoYXQgdGhlIGVsZW1lbnQgZm9jdXMgc2hvdWxkIG5vdCBiZSBtYWRlIHZpc2libGUuXG4gICAqL1xuICBkaXNhYmxlTW91c2VGb2N1cz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmxvY2tGb2N1c0NvbmZpZyBleHRlbmRzIFZpc2libGVGb2N1c0NvbmZpZyB7XG4gIGJsb2NrPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQZXJzaXN0Rm9jdXNDb25maWcgZXh0ZW5kcyBCbG9ja0ZvY3VzQ29uZmlnIHtcbiAgLyoqXG4gICAqIEEga2V5IHRvIG1haW50YWluIHRoZSBmb2N1cyBvZiBhbiBlbGVtZW50IGluIGNhc2UgdGhlIGNvbXBvbmVudCBpc1xuICAgKiByZWNyZWF0ZWQgKHdoaWNoIG9mdGVuIGlzIHRoZSBjYXNlIHdoZW4gYW4gYCpuZ0lmYCBvciBgKm5nRm9yYCBpcyB1c2VkKS5cbiAgICovXG4gIGtleT86IHN0cmluZztcblxuICAvKipcbiAgICogT3B0aW9uYWwgZ3JvdXAgaWRlbnRpZmllciB0aGF0IGNhbiBiZSB1c2VkIHRvIHBlcnNpc3QgdGhlIGZvY3VzLiBUaGlzIGFsbG93c1xuICAgKiB0byBoYXZlIHNlcGFyYXRlIHBlcnNpc3RlZCBmb2N1cyBhdmFpbGFibGUgd2hlbiB0aGUgRE9NIGlzIHBhcnRpYWxseSByZWJ1aWxkLlxuICAgKi9cbiAgZ3JvdXA/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXNjYXBlRm9jdXNDb25maWcgZXh0ZW5kcyBQZXJzaXN0Rm9jdXNDb25maWcge1xuICBmb2N1c09uRXNjYXBlPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIEZvcmNlIGFuIGF1dG9mb2N1cyBpbiBjYXNlIG9mIGRvdWJsZS1lc2NhcGVcbiAgICovXG4gIGZvY3VzT25Eb3VibGVFc2NhcGU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1dG9Gb2N1c0NvbmZpZyBleHRlbmRzIEVzY2FwZUZvY3VzQ29uZmlnIHtcbiAgLyoqXG4gICAqIEF1dG9mb2N1cyBpcyBlbmFibGVkIGJ5IGRlZmF1bHQsIGFuZCB3aWxsIHRyeSB0byBmb2N1cyBhbiBfYXV0b2ZvY3VzXyBlbGVtZW50LlxuICAgKiBJbiBjYXNlIHRoZSBmb2N1cyBpcyBleHBsaWNpdGx5IHNldCB0byBgdHJ1ZWAsIHRoZSBmaXJzdCBhY2Nlc3NpYmxlIGVsZW1lbnRcbiAgICogaXMgZm9jdXNzZWQgaW4gY2FzZSB0aGVyZSBpcyBubyBfYXV0b2ZvY3VzXyBlbGVtZW50IGZvdW5kLlxuICAgKiBJZiB0aGUgZm9jdXMgaXMgc2V0IHRvIGZhbHNlLCBhdXRvZm9jdXMgd2lsbCBiZSBkaXNhYmxlZCBjb21wbGV0ZWx5LlxuICAgKlxuICAgKiBJZiBhIHN0cmluZyB2YWx1ZSBpcyBnaXZlbiwgdGhlIGF1dG9mb2N1cyB3aWxsIGJlIHJlc3RvcmVkIGJhc2VkIG9uIHRoZSBwZXJzaXN0ZWRcbiAgICogZm9jdXMgZ3JvdXAsIHdoaWNoIGlzIGRyaXZlbiBieSBgUGVyc2lzdEZvY3VzQ29uZmlnLmtleWAgYW5kIGBQZXJzaXN0Rm9jdXNDb25maWcuZ3JvdXBgLlxuICAgKlxuICAgKiBEZWZhdWx0cyB0byBgdHJ1ZWAuXG4gICAqL1xuICBhdXRvZm9jdXM/OiBib29sZWFuIHwgc3RyaW5nO1xuXG4gIC8qKlxuICAgKiB3aGVuZXZlciB0aGUgZm9jdXMgc2hvdWxkIGJlIGFwcGxpZWQgYmFzZWQgb24gYSBzcGVjaWZpYyB0cmlnZ2VyLCB5b3UgY2FuIHVzZXJcbiAgICogdGhlIHJlZnJlc2hGb2N1cyBwcm9wZXJ0eS4gVGhpcyBwcm9wZXJ0eSBjYW4gYmUgZHluYW1pY2FsbHkgYXBwbGllZCBzbyB0aGF0IHRoZSByZWZyZXNoXG4gICAqIG9ubHkgaGFwcGVucyBvbiBzcGVjaWZpYyBvY2Nhc2lvbnMuXG4gICAqXG4gICAqIFRoZSByZWZyZXNoRm9jdXMgdG9rZW4gZG9lc24ndCBoYXZlIGEgc3BlY2lmaWMgZm9ybWF0LCBpdCBhY3RzIGFzIGEgbWVhbmluZyBsZXNzIHRva2VuIHRoYXRcbiAgICogd2lsbCBlZmZlY3QgdGhlIG5nT25DaGFuZ2UgbGlmZWN5Y2xlIGhvb2sgb2YgdGhlIGF1dG8gZm9jdXMgbG9naWMuIEFueSB0cnV0aHkgdmFsdWUgd2lsbFxuICAgKiBhdXRvZm9jdXMgdGhlIGVsZW1lbnQgZHluYW1pY2FsbHkuXG4gICAqL1xuICByZWZyZXNoRm9jdXM/OiB1bmtub3duO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRhYkZvY3VzQ29uZmlnIGV4dGVuZHMgQXV0b0ZvY3VzQ29uZmlnIHtcbiAgdGFiPzogYm9vbGVhbiB8ICdzY3JvbGwnIHwgc3RyaW5nO1xufVxuXG5leHBvcnQgZW51bSBUcmFwRm9jdXMge1xuICAvKipcbiAgICogV2lsbCB0cmFwIHRoZSBmb2N1cyBhdCB0aGUgc3RhcnQgb2YgdGhlIGZvY3VzIGdyb3VwLlxuICAgKi9cbiAgc3RhcnQgPSAnc3RhcnQnLFxuICAvKipcbiAgICogV2lsbCB0cmFwIHRoZSBmb2N1cyBvbmx5IGF0IHRoZSBlbmQgb2YgdGhlIGZvY3VzIGdyb3VwLlxuICAgKi9cbiAgZW5kID0gJ2VuZCcsXG4gIC8qKlxuICAgKiBXaWxsIG5vdCB0cmFwIHRoZSBmb2N1cyBpbiBib3RoIGRpcmVjdGlvbnMuIFRoaXMgaXMgYWN0dWFsbHkgbm90IGFyZVxuICAgKiBhIGdyZWF0IGV4YW1wbGUgb2YgZm9jdXMgdHJhcCwgYnV0IGl0IHdpbGwgZ2l2ZSB0aGUgYmVuZWZpdCBvZiBrZXlib2FyZFxuICAgKiB0YWJiaW5nIGJ5IGFycm93cy5cbiAgICovXG4gIGJvdGggPSAnYm90aCcsXG59XG5cbmV4cG9ydCB0eXBlIFRyYXBGb2N1c1R5cGUgPVxuICB8IGJvb2xlYW5cbiAgfCBUcmFwRm9jdXMuc3RhcnRcbiAgfCBUcmFwRm9jdXMuZW5kXG4gIHwgVHJhcEZvY3VzLmJvdGg7XG5cbi8qKlxuICogVGhlIGtleWJvYXJkIG5hdmlnYXRpb24gKHRhYiwgc2hpZnQtdGFiIGFuZCB1cCBkb3duIGtleXMpIGlzIF90cmFwcGVkX1xuICogZm9yIHRoZSBuZXN0ZWQgZm9jdXNhYmxlIGVsZW1lbnRzLiBUaGlzIG1lYW5zIHRoYXQgdGhlIGZvY3VzIGNhbiBub3RcbiAqIFwibGVhdmVcIiB0aGUgZWxlbWVudHMuIElmIHRoZSBsYXN0IGVsZW1lbnQgaXMgZm9jdXNlZCwgdGhlIGtleWJvYXJkIHdpbGxcbiAqIG5hdmlnYXRlIHRvIHRoZSBmaXJzdCBlbGVtZW50IGFuZCB2aXNhIHZlcnNhLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRyYXBGb2N1c0NvbmZpZyBleHRlbmRzIFRhYkZvY3VzQ29uZmlnIHtcbiAgLyoqIHRyYXBzIHRoZSBmb2N1cyAqL1xuICB0cmFwPzogVHJhcEZvY3VzVHlwZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBMb2NrRm9jdXNDb25maWcgZXh0ZW5kcyBUcmFwRm9jdXNDb25maWcge1xuICAvKipcbiAgICogSW5kaWNhdGVzIHRoYXQgdGhlIG5lc3RlZCBET00gaXMgbG9ja2VkIGZvciBrZXlib2FyZGluZyAoYFRBQmApLlxuICAgKi9cbiAgbG9jaz86IGJvb2xlYW47XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktaW50ZXJmYWNlXG5leHBvcnQgaW50ZXJmYWNlIEZvY3VzQ29uZmlnIGV4dGVuZHMgTG9ja0ZvY3VzQ29uZmlnIHt9XG4iXX0=