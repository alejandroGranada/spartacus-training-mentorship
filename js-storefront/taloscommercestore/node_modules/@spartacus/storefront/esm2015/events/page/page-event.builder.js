import { Injectable } from '@angular/core';
import { ActionsSubject } from '@ngrx/store';
import { createFrom, EventService, FeatureConfigService, } from '@spartacus/core';
import { map } from 'rxjs/operators';
import { NavigationEvent } from '../navigation/navigation.event';
import { PageEvent } from './page.events';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
import * as i2 from "@spartacus/core";
// TODO: #10896 - delete this whole file
/**
 * @deprecated @since 3.1 - this builder will be removed in 4.0. Please use NavigationEventBuilder and NavigationEvent instead.
 */
export class PageEventBuilder {
    constructor(
    /** @deprecated @since 3.1 - this will be removed in 4.0 */
    actions, eventService, 
    /** @deprecated @since 3.1 - this will be removed in 4.0 */ featureConfigService) {
        this.actions = actions;
        this.eventService = eventService;
        this.featureConfigService = featureConfigService;
        this.register();
    }
    register() {
        var _a;
        if ((_a = this.featureConfigService) === null || _a === void 0 ? void 0 : _a.isLevel('!3.1')) {
            this.eventService.register(PageEvent, this.buildPageEvent());
        }
    }
    /**
     * @deprecated @since 3.1 - this will be removed in 4.0. Please use `NavigationEvent` instead.
     */
    buildPageEvent() {
        return this.eventService.get(NavigationEvent).pipe(map((navigationEvent) => createFrom(PageEvent, {
            context: navigationEvent.context,
            semanticRoute: navigationEvent.semanticRoute,
            url: navigationEvent.url,
            params: navigationEvent.params,
            navigation: Object.assign({}, navigationEvent),
        })));
    }
}
PageEventBuilder.ɵprov = i0.ɵɵdefineInjectable({ factory: function PageEventBuilder_Factory() { return new PageEventBuilder(i0.ɵɵinject(i1.ActionsSubject), i0.ɵɵinject(i2.EventService), i0.ɵɵinject(i2.FeatureConfigService)); }, token: PageEventBuilder, providedIn: "root" });
PageEventBuilder.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
PageEventBuilder.ctorParameters = () => [
    { type: ActionsSubject },
    { type: EventService },
    { type: FeatureConfigService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1ldmVudC5idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy8iLCJzb3VyY2VzIjpbImV2ZW50cy9wYWdlL3BhZ2UtZXZlbnQuYnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0MsT0FBTyxFQUNMLFVBQVUsRUFDVixZQUFZLEVBQ1osb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBSzFDLHdDQUF3QztBQUN4Qzs7R0FFRztBQUNILE1BQU0sT0FBTyxnQkFBZ0I7SUFDM0I7SUFDRSwyREFBMkQ7SUFDakQsT0FBdUIsRUFDdkIsWUFBMEI7SUFDcEMsMkRBQTJELENBQVcsb0JBQTJDO1FBRnZHLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBQ3ZCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQ2tDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBdUI7UUFFakgsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xCLENBQUM7SUFFUyxRQUFROztRQUNoQixVQUFJLElBQUksQ0FBQyxvQkFBb0IsMENBQUUsT0FBTyxDQUFDLE1BQU0sR0FBRztZQUM5QyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7U0FDOUQ7SUFDSCxDQUFDO0lBRUQ7O09BRUc7SUFDTyxjQUFjO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBSSxDQUNoRCxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUN0QixVQUFVLENBQUMsU0FBUyxFQUFFO1lBQ3BCLE9BQU8sRUFBRSxlQUFlLENBQUMsT0FBTztZQUNoQyxhQUFhLEVBQUUsZUFBZSxDQUFDLGFBQWE7WUFDNUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxHQUFHO1lBQ3hCLE1BQU0sRUFBRSxlQUFlLENBQUMsTUFBTTtZQUM5QixVQUFVLG9CQUNMLGVBQWUsQ0FDbkI7U0FDRixDQUFDLENBQ0gsQ0FDRixDQUFDO0lBQ0osQ0FBQzs7OztZQXhDRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztZQWJRLGNBQWM7WUFHckIsWUFBWTtZQUNaLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGlvbnNTdWJqZWN0IH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHtcbiAgY3JlYXRlRnJvbSxcbiAgRXZlbnRTZXJ2aWNlLFxuICBGZWF0dXJlQ29uZmlnU2VydmljZSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IE5hdmlnYXRpb25FdmVudCB9IGZyb20gJy4uL25hdmlnYXRpb24vbmF2aWdhdGlvbi5ldmVudCc7XG5pbXBvcnQgeyBQYWdlRXZlbnQgfSBmcm9tICcuL3BhZ2UuZXZlbnRzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuLy8gVE9ETzogIzEwODk2IC0gZGVsZXRlIHRoaXMgd2hvbGUgZmlsZVxuLyoqXG4gKiBAZGVwcmVjYXRlZCBAc2luY2UgMy4xIC0gdGhpcyBidWlsZGVyIHdpbGwgYmUgcmVtb3ZlZCBpbiA0LjAuIFBsZWFzZSB1c2UgTmF2aWdhdGlvbkV2ZW50QnVpbGRlciBhbmQgTmF2aWdhdGlvbkV2ZW50IGluc3RlYWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBQYWdlRXZlbnRCdWlsZGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgLyoqIEBkZXByZWNhdGVkIEBzaW5jZSAzLjEgLSB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiA0LjAgKi9cbiAgICBwcm90ZWN0ZWQgYWN0aW9uczogQWN0aW9uc1N1YmplY3QsXG4gICAgcHJvdGVjdGVkIGV2ZW50U2VydmljZTogRXZlbnRTZXJ2aWNlLFxuICAgIC8qKiBAZGVwcmVjYXRlZCBAc2luY2UgMy4xIC0gdGhpcyB3aWxsIGJlIHJlbW92ZWQgaW4gNC4wICovIHByb3RlY3RlZCBmZWF0dXJlQ29uZmlnU2VydmljZT86IEZlYXR1cmVDb25maWdTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMucmVnaXN0ZXIoKTtcbiAgfVxuXG4gIHByb3RlY3RlZCByZWdpc3RlcigpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5mZWF0dXJlQ29uZmlnU2VydmljZT8uaXNMZXZlbCgnITMuMScpKSB7XG4gICAgICB0aGlzLmV2ZW50U2VydmljZS5yZWdpc3RlcihQYWdlRXZlbnQsIHRoaXMuYnVpbGRQYWdlRXZlbnQoKSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBkZXByZWNhdGVkIEBzaW5jZSAzLjEgLSB0aGlzIHdpbGwgYmUgcmVtb3ZlZCBpbiA0LjAuIFBsZWFzZSB1c2UgYE5hdmlnYXRpb25FdmVudGAgaW5zdGVhZC5cbiAgICovXG4gIHByb3RlY3RlZCBidWlsZFBhZ2VFdmVudCgpOiBPYnNlcnZhYmxlPFBhZ2VFdmVudD4ge1xuICAgIHJldHVybiB0aGlzLmV2ZW50U2VydmljZS5nZXQoTmF2aWdhdGlvbkV2ZW50KS5waXBlKFxuICAgICAgbWFwKChuYXZpZ2F0aW9uRXZlbnQpID0+XG4gICAgICAgIGNyZWF0ZUZyb20oUGFnZUV2ZW50LCB7XG4gICAgICAgICAgY29udGV4dDogbmF2aWdhdGlvbkV2ZW50LmNvbnRleHQsXG4gICAgICAgICAgc2VtYW50aWNSb3V0ZTogbmF2aWdhdGlvbkV2ZW50LnNlbWFudGljUm91dGUsXG4gICAgICAgICAgdXJsOiBuYXZpZ2F0aW9uRXZlbnQudXJsLFxuICAgICAgICAgIHBhcmFtczogbmF2aWdhdGlvbkV2ZW50LnBhcmFtcyxcbiAgICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgICAuLi5uYXZpZ2F0aW9uRXZlbnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICB9XG59XG4iXX0=