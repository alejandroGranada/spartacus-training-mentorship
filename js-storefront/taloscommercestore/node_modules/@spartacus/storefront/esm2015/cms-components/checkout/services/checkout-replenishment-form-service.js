import { Injectable } from '@angular/core';
import { DaysOfWeek, recurrencePeriod, } from '@spartacus/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class CheckoutReplenishmentFormService {
    constructor() {
        /**
         * Default form data
         */
        this.defaultFormData = {
            daysOfWeek: [DaysOfWeek.MONDAY],
            nthDayOfMonth: '1',
            numberOfDays: '14',
            numberOfWeeks: '1',
            recurrencePeriod: recurrencePeriod.DAILY,
            replenishmentStartDate: new Date().toISOString().split('T')[0],
        };
        this.scheduleReplenishmentFormData$ = new BehaviorSubject(this.defaultFormData);
    }
    getScheduleReplenishmentFormData() {
        return this.scheduleReplenishmentFormData$.asObservable();
    }
    setScheduleReplenishmentFormData(formData) {
        this.scheduleReplenishmentFormData$.next(formData);
    }
    resetScheduleReplenishmentFormData() {
        this.scheduleReplenishmentFormData$.next(this.defaultFormData);
    }
}
CheckoutReplenishmentFormService.ɵprov = i0.ɵɵdefineInjectable({ factory: function CheckoutReplenishmentFormService_Factory() { return new CheckoutReplenishmentFormService(); }, token: CheckoutReplenishmentFormService, providedIn: "root" });
CheckoutReplenishmentFormService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
CheckoutReplenishmentFormService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtcmVwbGVuaXNobWVudC1mb3JtLXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvc3JjLyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvY2hlY2tvdXQvc2VydmljZXMvY2hlY2tvdXQtcmVwbGVuaXNobWVudC1mb3JtLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQ0wsVUFBVSxFQUNWLGdCQUFnQixHQUVqQixNQUFNLGlCQUFpQixDQUFDO0FBQ3pCLE9BQU8sRUFBRSxlQUFlLEVBQWMsTUFBTSxNQUFNLENBQUM7O0FBS25ELE1BQU0sT0FBTyxnQ0FBZ0M7SUFpQjNDO1FBaEJBOztXQUVHO1FBQ00sb0JBQWUsR0FBOEI7WUFDcEQsVUFBVSxFQUFFLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUMvQixhQUFhLEVBQUUsR0FBRztZQUNsQixZQUFZLEVBQUUsSUFBSTtZQUNsQixhQUFhLEVBQUUsR0FBRztZQUNsQixnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxLQUFLO1lBQ3hDLHNCQUFzQixFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvRCxDQUFDO1FBRU0sbUNBQThCLEdBQStDLElBQUksZUFBZSxDQUN0RyxJQUFJLENBQUMsZUFBZSxDQUNyQixDQUFDO0lBRWEsQ0FBQztJQUVoQixnQ0FBZ0M7UUFDOUIsT0FBTyxJQUFJLENBQUMsOEJBQThCLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDNUQsQ0FBQztJQUVELGdDQUFnQyxDQUFDLFFBQW1DO1FBQ2xFLElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELGtDQUFrQztRQUNoQyxJQUFJLENBQUMsOEJBQThCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUNqRSxDQUFDOzs7O1lBaENGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIERheXNPZldlZWssXG4gIHJlY3VycmVuY2VQZXJpb2QsXG4gIFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0sXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIENoZWNrb3V0UmVwbGVuaXNobWVudEZvcm1TZXJ2aWNlIHtcbiAgLyoqXG4gICAqIERlZmF1bHQgZm9ybSBkYXRhXG4gICAqL1xuICByZWFkb25seSBkZWZhdWx0Rm9ybURhdGE6IFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0gPSB7XG4gICAgZGF5c09mV2VlazogW0RheXNPZldlZWsuTU9OREFZXSxcbiAgICBudGhEYXlPZk1vbnRoOiAnMScsXG4gICAgbnVtYmVyT2ZEYXlzOiAnMTQnLFxuICAgIG51bWJlck9mV2Vla3M6ICcxJyxcbiAgICByZWN1cnJlbmNlUGVyaW9kOiByZWN1cnJlbmNlUGVyaW9kLkRBSUxZLFxuICAgIHJlcGxlbmlzaG1lbnRTdGFydERhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdLFxuICB9O1xuXG4gIHByaXZhdGUgc2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybURhdGEkOiBCZWhhdmlvclN1YmplY3Q8U2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybT4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0PFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0+KFxuICAgIHRoaXMuZGVmYXVsdEZvcm1EYXRhXG4gICk7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGdldFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm1EYXRhKCk6IE9ic2VydmFibGU8U2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybT4ge1xuICAgIHJldHVybiB0aGlzLnNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm1EYXRhJC5hc09ic2VydmFibGUoKTtcbiAgfVxuXG4gIHNldFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm1EYXRhKGZvcm1EYXRhOiBTY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtKTogdm9pZCB7XG4gICAgdGhpcy5zY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtRGF0YSQubmV4dChmb3JtRGF0YSk7XG4gIH1cblxuICByZXNldFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm1EYXRhKCk6IHZvaWQge1xuICAgIHRoaXMuc2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybURhdGEkLm5leHQodGhpcy5kZWZhdWx0Rm9ybURhdGEpO1xuICB9XG59XG4iXX0=