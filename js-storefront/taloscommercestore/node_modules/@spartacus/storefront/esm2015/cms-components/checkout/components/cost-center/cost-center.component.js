import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CheckoutCostCenterService, PaymentTypeService, UserCostCenterService, } from '@spartacus/core';
import { filter, map, tap, withLatestFrom } from 'rxjs/operators';
export class CostCenterComponent {
    constructor(userCostCenterService, checkoutCostCenterService, paymentTypeService) {
        this.userCostCenterService = userCostCenterService;
        this.checkoutCostCenterService = checkoutCostCenterService;
        this.paymentTypeService = paymentTypeService;
    }
    get isAccountPayment$() {
        return this.paymentTypeService.isAccountPayment();
    }
    get costCenters$() {
        return this.userCostCenterService.getActiveCostCenters().pipe(withLatestFrom(this.checkoutCostCenterService.getCostCenter()), filter(([costCenters]) => Boolean(costCenters)), tap(([costCenters, cartCostCenter]) => {
            if (!Boolean(cartCostCenter)) {
                this.setCostCenter(costCenters[0].code);
            }
            else {
                this.costCenterId = cartCostCenter;
            }
        }), map(([costCenters]) => costCenters));
    }
    setCostCenter(selectCostCenter) {
        this.costCenterId = selectCostCenter;
        this.checkoutCostCenterService.setCostCenter(this.costCenterId);
    }
}
CostCenterComponent.decorators = [
    { type: Component, args: [{
                selector: 'cx-cost-center',
                template: "<ng-container *ngIf=\"isAccountPayment$ | async\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-xl-10\">\n      <ng-container *ngIf=\"costCenters$ | async as costCenters\">\n        <div *ngIf=\"costCenters.length !== 0\">\n          <label>\n            <span class=\"label-content required\">{{\n              'checkoutPO.costCenter' | cxTranslate\n            }}</span>\n            <select (change)=\"setCostCenter($event.target.value)\">\n              <option\n                *ngFor=\"let costCenter of costCenters\"\n                value=\"{{ costCenter.code }}\"\n                [selected]=\"costCenterId === costCenter.code\"\n              >\n                {{ costCenter.name }}\n              </option>\n            </select>\n            <span class=\"label-content\">{{\n              'checkoutPO.availableLabel' | cxTranslate\n            }}</span>\n          </label>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
CostCenterComponent.ctorParameters = () => [
    { type: UserCostCenterService },
    { type: CheckoutCostCenterService },
    { type: PaymentTypeService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdC1jZW50ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NyYy8iLCJzb3VyY2VzIjpbImNtcy1jb21wb25lbnRzL2NoZWNrb3V0L2NvbXBvbmVudHMvY29zdC1jZW50ZXIvY29zdC1jZW50ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUNMLHlCQUF5QixFQUV6QixrQkFBa0IsRUFDbEIscUJBQXFCLEdBQ3RCLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT2xFLE1BQU0sT0FBTyxtQkFBbUI7SUFHOUIsWUFDWSxxQkFBNEMsRUFDNUMseUJBQW9ELEVBQ3BELGtCQUFzQztRQUZ0QywwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBQzVDLDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBMkI7UUFDcEQsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUMvQyxDQUFDO0lBRUosSUFBSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUNwRCxDQUFDO0lBRUQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxJQUFJLENBQzNELGNBQWMsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsYUFBYSxFQUFFLENBQUMsRUFDOUQsTUFBTSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQy9DLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxFQUFFLEVBQUU7WUFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtnQkFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDekM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFlBQVksR0FBRyxjQUFjLENBQUM7YUFDcEM7UUFDSCxDQUFDLENBQUMsRUFDRixHQUFHLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FDcEMsQ0FBQztJQUNKLENBQUM7SUFFRCxhQUFhLENBQUMsZ0JBQXdCO1FBQ3BDLElBQUksQ0FBQyxZQUFZLEdBQUcsZ0JBQWdCLENBQUM7UUFDckMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbEUsQ0FBQzs7O1lBcENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQiw2OUJBQXlDO2dCQUN6QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRDs7O1lBVEMscUJBQXFCO1lBSHJCLHlCQUF5QjtZQUV6QixrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDaGVja291dENvc3RDZW50ZXJTZXJ2aWNlLFxuICBDb3N0Q2VudGVyLFxuICBQYXltZW50VHlwZVNlcnZpY2UsXG4gIFVzZXJDb3N0Q2VudGVyU2VydmljZSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciwgbWFwLCB0YXAsIHdpdGhMYXRlc3RGcm9tIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jb3N0LWNlbnRlcicsXG4gIHRlbXBsYXRlVXJsOiAnY29zdC1jZW50ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29zdENlbnRlckNvbXBvbmVudCB7XG4gIGNvc3RDZW50ZXJJZDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCB1c2VyQ29zdENlbnRlclNlcnZpY2U6IFVzZXJDb3N0Q2VudGVyU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXRDb3N0Q2VudGVyU2VydmljZTogQ2hlY2tvdXRDb3N0Q2VudGVyU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgcGF5bWVudFR5cGVTZXJ2aWNlOiBQYXltZW50VHlwZVNlcnZpY2VcbiAgKSB7fVxuXG4gIGdldCBpc0FjY291bnRQYXltZW50JCgpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICByZXR1cm4gdGhpcy5wYXltZW50VHlwZVNlcnZpY2UuaXNBY2NvdW50UGF5bWVudCgpO1xuICB9XG5cbiAgZ2V0IGNvc3RDZW50ZXJzJCgpOiBPYnNlcnZhYmxlPENvc3RDZW50ZXJbXT4ge1xuICAgIHJldHVybiB0aGlzLnVzZXJDb3N0Q2VudGVyU2VydmljZS5nZXRBY3RpdmVDb3N0Q2VudGVycygpLnBpcGUoXG4gICAgICB3aXRoTGF0ZXN0RnJvbSh0aGlzLmNoZWNrb3V0Q29zdENlbnRlclNlcnZpY2UuZ2V0Q29zdENlbnRlcigpKSxcbiAgICAgIGZpbHRlcigoW2Nvc3RDZW50ZXJzXSkgPT4gQm9vbGVhbihjb3N0Q2VudGVycykpLFxuICAgICAgdGFwKChbY29zdENlbnRlcnMsIGNhcnRDb3N0Q2VudGVyXSkgPT4ge1xuICAgICAgICBpZiAoIUJvb2xlYW4oY2FydENvc3RDZW50ZXIpKSB7XG4gICAgICAgICAgdGhpcy5zZXRDb3N0Q2VudGVyKGNvc3RDZW50ZXJzWzBdLmNvZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY29zdENlbnRlcklkID0gY2FydENvc3RDZW50ZXI7XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgbWFwKChbY29zdENlbnRlcnNdKSA9PiBjb3N0Q2VudGVycylcbiAgICApO1xuICB9XG5cbiAgc2V0Q29zdENlbnRlcihzZWxlY3RDb3N0Q2VudGVyOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmNvc3RDZW50ZXJJZCA9IHNlbGVjdENvc3RDZW50ZXI7XG4gICAgdGhpcy5jaGVja291dENvc3RDZW50ZXJTZXJ2aWNlLnNldENvc3RDZW50ZXIodGhpcy5jb3N0Q2VudGVySWQpO1xuICB9XG59XG4iXX0=