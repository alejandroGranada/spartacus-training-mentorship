import { Injectable } from '@angular/core';
import { Config } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export var ICON_TYPE;
(function (ICON_TYPE) {
    ICON_TYPE["STAR"] = "STAR";
    ICON_TYPE["SEARCH"] = "SEARCH";
    ICON_TYPE["CART"] = "CART";
    ICON_TYPE["INFO"] = "INFO";
    ICON_TYPE["GRID"] = "GRID";
    ICON_TYPE["LIST"] = "LIST";
    ICON_TYPE["CARET_DOWN"] = "CARET_DOWN";
    ICON_TYPE["CARET_UP"] = "CARET_UP";
    ICON_TYPE["CARET_LEFT"] = "CARET_LEFT";
    ICON_TYPE["CARET_RIGHT"] = "CARET_RIGHT";
    ICON_TYPE["CLOSE"] = "CLOSE";
    ICON_TYPE["ERROR"] = "ERROR";
    ICON_TYPE["WARNING"] = "WARNING";
    ICON_TYPE["SUCCESS"] = "SUCCESS";
    ICON_TYPE["VISA"] = "VISA";
    ICON_TYPE["MASTER_CARD"] = "MASTER_CARD";
    ICON_TYPE["AMEX"] = "AMEX";
    ICON_TYPE["DINERS_CLUB"] = "DINERS_CLUB";
    ICON_TYPE["CREDIT_CARD"] = "CREDIT_CARD";
    ICON_TYPE["EXPAND"] = "EXPAND";
    ICON_TYPE["COLLAPSE"] = "COLLAPSE";
    ICON_TYPE["RESET"] = "RESET";
    ICON_TYPE["CIRCLE"] = "CIRCLE";
    ICON_TYPE["HEART"] = "HEART";
    ICON_TYPE["EMPTY_HEART"] = "EMPTY_HEART";
    ICON_TYPE["FILTER"] = "FILTER";
    ICON_TYPE["PENCIL"] = "PENCIL";
    ICON_TYPE["CLOCK"] = "CLOCK";
    ICON_TYPE["TRASH"] = "TRASH";
    ICON_TYPE["ACTIVE"] = "ACTIVE";
    ICON_TYPE["SORT_DOWN"] = "SORT_DOWN";
    ICON_TYPE["SORT"] = "SORT";
    ICON_TYPE["ON"] = "ON";
    ICON_TYPE["OFF"] = "OFF";
    ICON_TYPE["LINK_OUT"] = "LINK_OUT";
})(ICON_TYPE || (ICON_TYPE = {}));
export class IconConfig {
}
IconConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconConfig_Factory() { return i0.ɵɵinject(i1.Config); }, token: IconConfig, providedIn: "root" });
IconConfig.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useExisting: Config,
            },] }
];
/**
 * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.
 * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.
 */
export var IconResourceType;
(function (IconResourceType) {
    /**
     * An svg based icon requires an SVG resource that must be loaded,
     * this is typically a sprite svg file.
     */
    IconResourceType["SVG"] = "svg";
    /**
     * A font based ICON might require an additional CSS file to be loaded.
     */
    IconResourceType["LINK"] = "link";
    /**
     * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image
     * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)
     */
    IconResourceType["TEXT"] = "text";
})(IconResourceType || (IconResourceType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9QYXRyeWsvRGVza3RvcC9zcGFydGFjdXMvcHJvamVjdHMvc3RvcmVmcm9udGxpYi9zcmMvIiwic291cmNlcyI6WyJjbXMtY29tcG9uZW50cy9taXNjL2ljb24vaWNvbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7O0FBR3pDLE1BQU0sQ0FBTixJQUFZLFNBb0NYO0FBcENELFdBQVksU0FBUztJQUNuQiwwQkFBYSxDQUFBO0lBQ2IsOEJBQWlCLENBQUE7SUFDakIsMEJBQWEsQ0FBQTtJQUNiLDBCQUFhLENBQUE7SUFDYiwwQkFBYSxDQUFBO0lBQ2IsMEJBQWEsQ0FBQTtJQUNiLHNDQUF5QixDQUFBO0lBQ3pCLGtDQUFxQixDQUFBO0lBQ3JCLHNDQUF5QixDQUFBO0lBQ3pCLHdDQUEyQixDQUFBO0lBQzNCLDRCQUFlLENBQUE7SUFDZiw0QkFBZSxDQUFBO0lBQ2YsZ0NBQW1CLENBQUE7SUFDbkIsZ0NBQW1CLENBQUE7SUFDbkIsMEJBQWEsQ0FBQTtJQUNiLHdDQUEyQixDQUFBO0lBQzNCLDBCQUFhLENBQUE7SUFDYix3Q0FBMkIsQ0FBQTtJQUMzQix3Q0FBMkIsQ0FBQTtJQUMzQiw4QkFBaUIsQ0FBQTtJQUNqQixrQ0FBcUIsQ0FBQTtJQUNyQiw0QkFBZSxDQUFBO0lBQ2YsOEJBQWlCLENBQUE7SUFDakIsNEJBQWUsQ0FBQTtJQUNmLHdDQUEyQixDQUFBO0lBQzNCLDhCQUFpQixDQUFBO0lBQ2pCLDhCQUFpQixDQUFBO0lBQ2pCLDRCQUFlLENBQUE7SUFDZiw0QkFBZSxDQUFBO0lBQ2YsOEJBQWlCLENBQUE7SUFDakIsb0NBQXVCLENBQUE7SUFDdkIsMEJBQWEsQ0FBQTtJQUNiLHNCQUFTLENBQUE7SUFDVCx3QkFBVyxDQUFBO0lBQ1gsa0NBQXFCLENBQUE7QUFDdkIsQ0FBQyxFQXBDVyxTQUFTLEtBQVQsU0FBUyxRQW9DcEI7QUFNRCxNQUFNLE9BQWdCLFVBQVU7Ozs7WUFKL0IsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2dCQUNsQixXQUFXLEVBQUUsTUFBTTthQUNwQjs7QUEyQ0Q7OztHQUdHO0FBQ0gsTUFBTSxDQUFOLElBQVksZ0JBZ0JYO0FBaEJELFdBQVksZ0JBQWdCO0lBQzFCOzs7T0FHRztJQUNILCtCQUFXLENBQUE7SUFFWDs7T0FFRztJQUNILGlDQUFhLENBQUE7SUFDYjs7O09BR0c7SUFDSCxpQ0FBYSxDQUFBO0FBQ2YsQ0FBQyxFQWhCVyxnQkFBZ0IsS0FBaEIsZ0JBQWdCLFFBZ0IzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBEaXJlY3Rpb25Nb2RlIH0gZnJvbSAnLi4vLi4vLi4vbGF5b3V0L2RpcmVjdGlvbi9jb25maWcvZGlyZWN0aW9uLm1vZGVsJztcblxuZXhwb3J0IGVudW0gSUNPTl9UWVBFIHtcbiAgU1RBUiA9ICdTVEFSJyxcbiAgU0VBUkNIID0gJ1NFQVJDSCcsXG4gIENBUlQgPSAnQ0FSVCcsXG4gIElORk8gPSAnSU5GTycsXG4gIEdSSUQgPSAnR1JJRCcsXG4gIExJU1QgPSAnTElTVCcsXG4gIENBUkVUX0RPV04gPSAnQ0FSRVRfRE9XTicsXG4gIENBUkVUX1VQID0gJ0NBUkVUX1VQJyxcbiAgQ0FSRVRfTEVGVCA9ICdDQVJFVF9MRUZUJyxcbiAgQ0FSRVRfUklHSFQgPSAnQ0FSRVRfUklHSFQnLFxuICBDTE9TRSA9ICdDTE9TRScsXG4gIEVSUk9SID0gJ0VSUk9SJyxcbiAgV0FSTklORyA9ICdXQVJOSU5HJyxcbiAgU1VDQ0VTUyA9ICdTVUNDRVNTJyxcbiAgVklTQSA9ICdWSVNBJyxcbiAgTUFTVEVSX0NBUkQgPSAnTUFTVEVSX0NBUkQnLFxuICBBTUVYID0gJ0FNRVgnLFxuICBESU5FUlNfQ0xVQiA9ICdESU5FUlNfQ0xVQicsXG4gIENSRURJVF9DQVJEID0gJ0NSRURJVF9DQVJEJyxcbiAgRVhQQU5EID0gJ0VYUEFORCcsXG4gIENPTExBUFNFID0gJ0NPTExBUFNFJyxcbiAgUkVTRVQgPSAnUkVTRVQnLFxuICBDSVJDTEUgPSAnQ0lSQ0xFJyxcbiAgSEVBUlQgPSAnSEVBUlQnLFxuICBFTVBUWV9IRUFSVCA9ICdFTVBUWV9IRUFSVCcsXG4gIEZJTFRFUiA9ICdGSUxURVInLFxuICBQRU5DSUwgPSAnUEVOQ0lMJyxcbiAgQ0xPQ0sgPSAnQ0xPQ0snLFxuICBUUkFTSCA9ICdUUkFTSCcsXG4gIEFDVElWRSA9ICdBQ1RJVkUnLFxuICBTT1JUX0RPV04gPSAnU09SVF9ET1dOJyxcbiAgU09SVCA9ICdTT1JUJyxcbiAgT04gPSAnT04nLFxuICBPRkYgPSAnT0ZGJyxcbiAgTElOS19PVVQgPSAnTElOS19PVVQnLFxufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSWNvbkNvbmZpZyB7XG4gIGljb24/OiBJY29uT3B0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJY29uT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBFYWNoIGljb24gdHlwZSBjYW4gYmUgY29uZmlndXJlZCB3aXRoIGEgc28tY2FsbGVkIHN5bWJvbC4gVGhlIHN5bWJvbCB3aWxsXG4gICAqIGJlIHVzZWQgdG8gbWFwIHRoZSBpY29uIHRvIGFuIFNWRyBgc3ltYm9sYCAoaWQpIG9yIHRvIHRoZSBzdHlsZSBjbGFzc2VzIG9mXG4gICAqIGEgZm9udCBiYXNlZCBpY29uLiBUaGUgZm9sbG93aW5nIGNvbmZpZ3VyYXRpb24gd291bGQgbWFwIHRvIGEgZm9udGF3ZXNvbWVcbiAgICogaWNvbjpcbiAgICpcbiAgICogaWNvbjoge1xuICAgKiAgIHN5bWJvbHM6IHtcbiAgICogICAgIENBUlQ6ICdmYXMgZmEtc2hvcHBpbmctY2FydCdcbiAgICogICB9XG4gICAqIH1cbiAgICovXG4gIHN5bWJvbHM/OiB7XG4gICAgW0lDT05fVFlQRTogc3RyaW5nXTogc3RyaW5nO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZXNvdXJjZXMgYXJlIHVzZWQgdG8gbWFwIGljb24gdHlwZXMgdG8gY2VydGFpbiBhc3NldCwgc3VjaCBhcyBhbiBTVkcgKHNwcml0ZSkgaW1hZ2UuXG4gICAqIFRoZSByZXNvdXJjZSB0eXBlIChgSWNvblJlc291cmNlVHlwZWApIGRpY3RhdGVzIHdoZXRoZXIgYW4gU1ZHIGltYWdlIGlzIHVzZWQuIFRoZSBVUkxcbiAgICogaXMgdXNlZCBmb3IgdGhlIFNWRyB4bGluayByZWZlcmVuY2UuXG4gICAqL1xuICByZXNvdXJjZXM/OiBJY29uQ29uZmlnUmVzb3VyY2VbXTtcblxuICAvKipcbiAgICogTGlzdHMgaWNvbnMgdGhhdCBzaG91bGQgYmUgZmxpcHBlZCBmb3IgYSBzcGVjaWZpYyBkaXJlY3Rpb24uXG4gICAqL1xuICBmbGlwRGlyZWN0aW9uPzoge1xuICAgIFtJQ09OX1RZUEU6IHN0cmluZ106IERpcmVjdGlvbk1vZGU7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWNvbkNvbmZpZ1Jlc291cmNlIHtcbiAgdHlwZTogSWNvblJlc291cmNlVHlwZSB8IHN0cmluZztcbiAgdXJsPzogc3RyaW5nO1xuICB0eXBlcz86IChJQ09OX1RZUEUgfCBzdHJpbmcpW107XG59XG5cbi8qKlxuICogRWFjaCBJQ09OIHR5cGUgY2FuIGhhdmUgYW4gY29tcGFuaWVkIHJlc291cmNlIHR5cGUsIHN1Y2ggYXMgU1ZHLCBMSU5LIChmb250KSBvciBqdXN0IFRFWFQuXG4gKiBUaGUgcmVzb3VyY2VzIHdpbGwgYmUgYXV0b21hdGljYWxseSBsb2FkZWQgaW4gY2FzZSB0aGV5J3JlIHJlcXVpcmVkIGZvciB0aGUgYElDT05fVFlQRWAuXG4gKi9cbmV4cG9ydCBlbnVtIEljb25SZXNvdXJjZVR5cGUge1xuICAvKipcbiAgICogQW4gc3ZnIGJhc2VkIGljb24gcmVxdWlyZXMgYW4gU1ZHIHJlc291cmNlIHRoYXQgbXVzdCBiZSBsb2FkZWQsXG4gICAqIHRoaXMgaXMgdHlwaWNhbGx5IGEgc3ByaXRlIHN2ZyBmaWxlLlxuICAgKi9cbiAgU1ZHID0gJ3N2ZycsXG5cbiAgLyoqXG4gICAqIEEgZm9udCBiYXNlZCBJQ09OIG1pZ2h0IHJlcXVpcmUgYW4gYWRkaXRpb25hbCBDU1MgZmlsZSB0byBiZSBsb2FkZWQuXG4gICAqL1xuICBMSU5LID0gJ2xpbmsnLFxuICAvKipcbiAgICogVGV4dCBiYXNlZCBpY29ucyB3aWxsIHNpbXBseSBhZGQgdGhlIElDT04gc3RyaW5nIHRvIHRoZSBET00uIFRleHQgaWNvbnMgZG8gbm90IG5lZWQgYW4gaW1hZ2VcbiAgICogb3IgQ1NTIHBzZXVkbyBjbGFzcyAoaS5lLiA6YmVmb3JlKSwgYXMgdGhlIHRleHQgaXRzZWxmIGlzIHRoZSBpY29uIChpLmUuICspXG4gICAqL1xuICBURVhUID0gJ3RleHQnLFxufVxuIl19