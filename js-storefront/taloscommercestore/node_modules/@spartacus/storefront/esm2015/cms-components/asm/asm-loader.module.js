import { CommonModule } from '@angular/common';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { PageComponentModule } from '../../cms-structure/page/component/page-component.module';
import { AsmEnablerService } from './services/asm-enabler.service';
/**
 * The ASM loader module takes care of loading the ASM UI
 * only in case there's a reason to do so.
 */
export class AsmLoaderModule {
}
AsmLoaderModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, PageComponentModule],
                providers: [
                    {
                        provide: APP_INITIALIZER,
                        useFactory: asmFactory,
                        deps: [AsmEnablerService],
                        multi: true,
                    },
                ],
            },] }
];
/**
 *
 * We do not like to block the UI, which is why we delgate loading of ASM
 * to a real component; the router and state aren't available in an optimized
 * way during the APP_INITIALIZER.
 */
export function asmFactory(asmEnablerService) {
    const isReady = () => {
        asmEnablerService.load();
    };
    return isReady;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWxvYWRlci5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvc3JjLyIsInNvdXJjZXMiOlsiY21zLWNvbXBvbmVudHMvYXNtL2FzbS1sb2FkZXIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUMvRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUVuRTs7O0dBR0c7QUFZSCxNQUFNLE9BQU8sZUFBZTs7O1lBWDNCLFFBQVEsU0FBQztnQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsbUJBQW1CLENBQUM7Z0JBQzVDLFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsZUFBZTt3QkFDeEIsVUFBVSxFQUFFLFVBQVU7d0JBQ3RCLElBQUksRUFBRSxDQUFDLGlCQUFpQixDQUFDO3dCQUN6QixLQUFLLEVBQUUsSUFBSTtxQkFDWjtpQkFDRjthQUNGOztBQUdEOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxpQkFBb0M7SUFDN0QsTUFBTSxPQUFPLEdBQUcsR0FBRyxFQUFFO1FBQ25CLGlCQUFpQixDQUFDLElBQUksRUFBRSxDQUFDO0lBQzNCLENBQUMsQ0FBQztJQUNGLE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQVBQX0lOSVRJQUxJWkVSLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnZUNvbXBvbmVudE1vZHVsZSB9IGZyb20gJy4uLy4uL2Ntcy1zdHJ1Y3R1cmUvcGFnZS9jb21wb25lbnQvcGFnZS1jb21wb25lbnQubW9kdWxlJztcbmltcG9ydCB7IEFzbUVuYWJsZXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9hc20tZW5hYmxlci5zZXJ2aWNlJztcblxuLyoqXG4gKiBUaGUgQVNNIGxvYWRlciBtb2R1bGUgdGFrZXMgY2FyZSBvZiBsb2FkaW5nIHRoZSBBU00gVUlcbiAqIG9ubHkgaW4gY2FzZSB0aGVyZSdzIGEgcmVhc29uIHRvIGRvIHNvLlxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBQYWdlQ29tcG9uZW50TW9kdWxlXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxuICAgICAgdXNlRmFjdG9yeTogYXNtRmFjdG9yeSxcbiAgICAgIGRlcHM6IFtBc21FbmFibGVyU2VydmljZV0sXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBBc21Mb2FkZXJNb2R1bGUge31cblxuLyoqXG4gKlxuICogV2UgZG8gbm90IGxpa2UgdG8gYmxvY2sgdGhlIFVJLCB3aGljaCBpcyB3aHkgd2UgZGVsZ2F0ZSBsb2FkaW5nIG9mIEFTTVxuICogdG8gYSByZWFsIGNvbXBvbmVudDsgdGhlIHJvdXRlciBhbmQgc3RhdGUgYXJlbid0IGF2YWlsYWJsZSBpbiBhbiBvcHRpbWl6ZWRcbiAqIHdheSBkdXJpbmcgdGhlIEFQUF9JTklUSUFMSVpFUi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzbUZhY3RvcnkoYXNtRW5hYmxlclNlcnZpY2U6IEFzbUVuYWJsZXJTZXJ2aWNlKSB7XG4gIGNvbnN0IGlzUmVhZHkgPSAoKSA9PiB7XG4gICAgYXNtRW5hYmxlclNlcnZpY2UubG9hZCgpO1xuICB9O1xuICByZXR1cm4gaXNSZWFkeTtcbn1cbiJdfQ==