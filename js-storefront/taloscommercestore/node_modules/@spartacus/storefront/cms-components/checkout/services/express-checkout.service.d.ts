import { Observable } from 'rxjs';
import { CheckoutDeliveryService, UserAddressService, UserPaymentService, CheckoutPaymentService, ClearCheckoutService } from '@spartacus/core';
import { CheckoutConfigService } from './checkout-config.service';
import { CheckoutDetailsService } from './checkout-details.service';
export declare class ExpressCheckoutService {
    protected userAddressService: UserAddressService;
    protected userPaymentService: UserPaymentService;
    protected checkoutDeliveryService: CheckoutDeliveryService;
    protected checkoutPaymentService: CheckoutPaymentService;
    protected checkoutDetailsService: CheckoutDetailsService;
    protected checkoutConfigService: CheckoutConfigService;
    protected clearCheckoutService?: ClearCheckoutService;
    private shippingAddressSet$;
    private deliveryModeSet$;
    private paymentMethodSet$;
    constructor(userAddressService: UserAddressService, userPaymentService: UserPaymentService, checkoutDeliveryService: CheckoutDeliveryService, checkoutPaymentService: CheckoutPaymentService, checkoutDetailsService: CheckoutDetailsService, checkoutConfigService: CheckoutConfigService, clearCheckoutService?: ClearCheckoutService);
    protected setShippingAddress(): void;
    protected setPaymentMethod(): void;
    protected setDeliveryMode(): void;
    /**
     * @deprecated since version 3.2
     * Use ClearCheckoutService to clear the checkout state
     */
    protected resetCheckoutProcesses(): void;
    trySetDefaultCheckoutDetails(): Observable<boolean>;
}
