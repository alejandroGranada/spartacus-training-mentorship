import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { StateUtils } from '../../../state/utils/index';
import { CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, USER_REPLENISHMENT_ORDER_DETAILS, } from '../user-state';
export const LOAD_REPLENISHMENT_ORDER_DETAILS = '[User] Load Replenishment Order Details';
export const LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS = '[User] Load Replenishment Order Details Success';
export const LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL = '[User] Load Replenishment Order Details Fail';
export const ClEAR_REPLENISHMENT_ORDER_DETAILS = '[User] Clear Replenishment Order Details';
export const CANCEL_REPLENISHMENT_ORDER = '[User] Cancel Replenishment Order';
export const CANCEL_REPLENISHMENT_ORDER_SUCCESS = '[User] Cancel Replenishment Order Success';
export const CANCEL_REPLENISHMENT_ORDER_FAIL = '[User] Cancel Replenishment Order Fail';
export const CLEAR_CANCEL_REPLENISHMENT_ORDER = '[User] Clear Cancel Replenishment Order';
export class LoadReplenishmentOrderDetails extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS;
    }
}
export class LoadReplenishmentOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;
    }
}
export class LoadReplenishmentOrderDetailsFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(USER_REPLENISHMENT_ORDER_DETAILS, payload);
        this.payload = payload;
        this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;
    }
}
export class ClearReplenishmentOrderDetails extends StateUtils.LoaderResetAction {
    constructor() {
        super(USER_REPLENISHMENT_ORDER_DETAILS);
        this.type = ClEAR_REPLENISHMENT_ORDER_DETAILS;
    }
}
export class CancelReplenishmentOrder extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER;
    }
}
export class CancelReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;
    }
}
export class CancelReplenishmentOrderFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = CANCEL_REPLENISHMENT_ORDER_FAIL;
    }
}
export class ClearCancelReplenishmentOrder extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID);
        this.type = CLEAR_CANCEL_REPLENISHMENT_ORDER;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlci1kZXRhaWxzLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9QYXRyeWsvRGVza3RvcC9zcGFydGFjdXMvcHJvamVjdHMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91c2VyL3N0b3JlL2FjdGlvbnMvcmVwbGVuaXNobWVudC1vcmRlci1kZXRhaWxzLmFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFDTCxxQ0FBcUMsRUFDckMsZ0NBQWdDLEdBQ2pDLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUMzQyx5Q0FBeUMsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSx3Q0FBd0MsR0FDbkQsaURBQWlELENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0scUNBQXFDLEdBQ2hELDhDQUE4QyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUM1QywwQ0FBMEMsQ0FBQztBQUU3QyxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxtQ0FBbUMsQ0FBQztBQUM5RSxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FDN0MsMkNBQTJDLENBQUM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQzFDLHdDQUF3QyxDQUFDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUMzQyx5Q0FBeUMsQ0FBQztBQUU1QyxNQUFNLE9BQU8sNkJBQThCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUU1RSxZQUNTLE9BR047UUFFRCxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztRQUxqQyxZQUFPLEdBQVAsT0FBTyxDQUdiO1FBTE0sU0FBSSxHQUFHLGdDQUFnQyxDQUFDO0lBUWpELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxvQ0FBcUMsU0FBUSxVQUFVLENBQUMsbUJBQW1CO0lBRXRGLFlBQW1CLE9BQTJCO1FBQzVDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRHZCLFlBQU8sR0FBUCxPQUFPLENBQW9CO1FBRHJDLFNBQUksR0FBRyx3Q0FBd0MsQ0FBQztJQUd6RCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8saUNBQWtDLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUVoRixZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxnQ0FBZ0MsRUFBRSxPQUFPLENBQUMsQ0FBQztRQURoQyxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxxQ0FBcUMsQ0FBQztJQUd0RCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsVUFBVSxDQUFDLGlCQUFpQjtJQUU5RTtRQUNFLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1FBRmpDLFNBQUksR0FBRyxpQ0FBaUMsQ0FBQztJQUdsRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUV2RSxZQUNTLE9BR047UUFFRCxLQUFLLENBQUMsZUFBZSxFQUFFLHFDQUFxQyxDQUFDLENBQUM7UUFMdkQsWUFBTyxHQUFQLE9BQU8sQ0FHYjtRQUxNLFNBQUksR0FBRywwQkFBMEIsQ0FBQztJQVEzQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sK0JBQWdDLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUVqRixZQUFtQixPQUEyQjtRQUM1QyxLQUFLLENBQUMsZUFBZSxFQUFFLHFDQUFxQyxDQUFDLENBQUM7UUFEN0MsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFEckMsU0FBSSxHQUFHLGtDQUFrQyxDQUFDO0lBR25ELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRTNFLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLGVBQWUsRUFBRSxxQ0FBcUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUR0RCxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRywrQkFBK0IsQ0FBQztJQUdoRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sNkJBQThCLFNBQVEsVUFBVSxDQUFDLHVCQUF1QjtJQUVuRjtRQUNFLEtBQUssQ0FBQyxlQUFlLEVBQUUscUNBQXFDLENBQUMsQ0FBQztRQUZ2RCxTQUFJLEdBQUcsZ0NBQWdDLENBQUM7SUFHakQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVwbGVuaXNobWVudE9yZGVyIH0gZnJvbSAnLi4vLi4vLi4vbW9kZWwvcmVwbGVuaXNobWVudC1vcmRlci5tb2RlbCc7XG5pbXBvcnQgeyBQUk9DRVNTX0ZFQVRVUkUgfSBmcm9tICcuLi8uLi8uLi9wcm9jZXNzL3N0b3JlL3Byb2Nlc3Mtc3RhdGUnO1xuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcbmltcG9ydCB7XG4gIENBTkNFTF9SRVBMRU5JU0hNRU5UX09SREVSX1BST0NFU1NfSUQsXG4gIFVTRVJfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTLFxufSBmcm9tICcuLi91c2VyLXN0YXRlJztcblxuZXhwb3J0IGNvbnN0IExPQURfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTID1cbiAgJ1tVc2VyXSBMb2FkIFJlcGxlbmlzaG1lbnQgT3JkZXIgRGV0YWlscyc7XG5leHBvcnQgY29uc3QgTE9BRF9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFNfU1VDQ0VTUyA9XG4gICdbVXNlcl0gTG9hZCBSZXBsZW5pc2htZW50IE9yZGVyIERldGFpbHMgU3VjY2Vzcyc7XG5leHBvcnQgY29uc3QgTE9BRF9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFNfRkFJTCA9XG4gICdbVXNlcl0gTG9hZCBSZXBsZW5pc2htZW50IE9yZGVyIERldGFpbHMgRmFpbCc7XG5leHBvcnQgY29uc3QgQ2xFQVJfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTID1cbiAgJ1tVc2VyXSBDbGVhciBSZXBsZW5pc2htZW50IE9yZGVyIERldGFpbHMnO1xuXG5leHBvcnQgY29uc3QgQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVIgPSAnW1VzZXJdIENhbmNlbCBSZXBsZW5pc2htZW50IE9yZGVyJztcbmV4cG9ydCBjb25zdCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9TVUNDRVNTID1cbiAgJ1tVc2VyXSBDYW5jZWwgUmVwbGVuaXNobWVudCBPcmRlciBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9GQUlMID1cbiAgJ1tVc2VyXSBDYW5jZWwgUmVwbGVuaXNobWVudCBPcmRlciBGYWlsJztcbmV4cG9ydCBjb25zdCBDTEVBUl9DQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUiA9XG4gICdbVXNlcl0gQ2xlYXIgQ2FuY2VsIFJlcGxlbmlzaG1lbnQgT3JkZXInO1xuXG5leHBvcnQgY2xhc3MgTG9hZFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFM7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBwYXlsb2FkOiB7XG4gICAgICB1c2VySWQ6IHN0cmluZztcbiAgICAgIHJlcGxlbmlzaG1lbnRPcmRlckNvZGU6IHN0cmluZztcbiAgICB9XG4gICkge1xuICAgIHN1cGVyKFVTRVJfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9hZFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJTdWNjZXNzQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBSZXBsZW5pc2htZW50T3JkZXIpIHtcbiAgICBzdXBlcihVU0VSX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUyk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMU19GQUlMO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogYW55KSB7XG4gICAgc3VwZXIoVVNFUl9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMsIHBheWxvYWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDbGVhclJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlclJlc2V0QWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENsRUFSX1JFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUztcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoVVNFUl9SRVBMRU5JU0hNRU5UX09SREVSX0RFVEFJTFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYW5jZWxSZXBsZW5pc2htZW50T3JkZXIgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVI7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBwYXlsb2FkOiB7XG4gICAgICB1c2VySWQ6IHN0cmluZztcbiAgICAgIHJlcGxlbmlzaG1lbnRPcmRlckNvZGU6IHN0cmluZztcbiAgICB9XG4gICkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfUFJPQ0VTU19JRCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlclN1Y2Nlc3MgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eVN1Y2Nlc3NBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFJlcGxlbmlzaG1lbnRPcmRlcikge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfUFJPQ0VTU19JRCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlckZhaWwgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUZhaWxBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgQ0FOQ0VMX1JFUExFTklTSE1FTlRfT1JERVJfUFJPQ0VTU19JRCwgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENsZWFyQ2FuY2VsUmVwbGVuaXNobWVudE9yZGVyIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDTEVBUl9DQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUjtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBDQU5DRUxfUkVQTEVOSVNITUVOVF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzQWN0aW9uID1cbiAgfCBMb2FkUmVwbGVuaXNobWVudE9yZGVyRGV0YWlsc1xuICB8IExvYWRSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzU3VjY2Vzc1xuICB8IExvYWRSZXBsZW5pc2htZW50T3JkZXJEZXRhaWxzRmFpbFxuICB8IENsZWFyUmVwbGVuaXNobWVudE9yZGVyRGV0YWlsc1xuICB8IENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlclxuICB8IENhbmNlbFJlcGxlbmlzaG1lbnRPcmRlclN1Y2Nlc3NcbiAgfCBDYW5jZWxSZXBsZW5pc2htZW50T3JkZXJGYWlsXG4gIHwgQ2xlYXJDYW5jZWxSZXBsZW5pc2htZW50T3JkZXI7XG4iXX0=