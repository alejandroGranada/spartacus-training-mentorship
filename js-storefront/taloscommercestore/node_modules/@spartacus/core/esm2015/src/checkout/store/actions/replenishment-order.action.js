import { PROCESS_FEATURE } from '../../../process/store/process-state';
import { StateUtils } from '../../../state/utils/index';
import { PLACED_ORDER_PROCESS_ID } from '../checkout-state';
export const SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Schedule Replenishment Order';
export const SCHEDULE_REPLENISHMENT_ORDER_SUCCESS = '[Checkout] Schedule Replenishment Order Success';
export const SCHEDULE_REPLENISHMENT_ORDER_FAIL = '[Checkout] Schedule Replenishment Order Fail';
export const CLEAR_SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Clear Schedule Replenishment Data';
export class ScheduleReplenishmentOrder extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER;
    }
}
export class ScheduleReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_SUCCESS;
    }
}
export class ScheduleReplenishmentOrderFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_FAIL;
    }
}
export class ClearScheduleReplenishmentOrderAction extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.type = CLEAR_SCHEDULE_REPLENISHMENT_ORDER;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlci5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY2hlY2tvdXQvc3RvcmUvYWN0aW9ucy9yZXBsZW5pc2htZW50LW9yZGVyLmFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTVELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUN2Qyx5Q0FBeUMsQ0FBQztBQUM1QyxNQUFNLENBQUMsTUFBTSxvQ0FBb0MsR0FDL0MsaURBQWlELENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0saUNBQWlDLEdBQzVDLDhDQUE4QyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxNQUFNLGtDQUFrQyxHQUM3Qyw4Q0FBOEMsQ0FBQztBQUVqRCxNQUFNLE9BQU8sMEJBQTJCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUV6RSxZQUNTLE9BS047UUFFRCxLQUFLLENBQUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFQekMsWUFBTyxHQUFQLE9BQU8sQ0FLYjtRQVBNLFNBQUksR0FBRyw0QkFBNEIsQ0FBQztJQVU3QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8saUNBQWtDLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUVuRixZQUFtQixPQUEyQjtRQUM1QyxLQUFLLENBQUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFEL0IsWUFBTyxHQUFQLE9BQU8sQ0FBb0I7UUFEckMsU0FBSSxHQUFHLG9DQUFvQyxDQUFDO0lBR3JELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRTdFLFlBQW1CLE9BQVk7UUFDN0IsS0FBSyxDQUFDLGVBQWUsRUFBRSx1QkFBdUIsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUR4QyxZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxpQ0FBaUMsQ0FBQztJQUdsRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8scUNBQXNDLFNBQVEsVUFBVSxDQUFDLHVCQUF1QjtJQUUzRjtRQUNFLEtBQUssQ0FBQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUZ6QyxTQUFJLEdBQUcsa0NBQWtDLENBQUM7SUFHbkQsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgUmVwbGVuaXNobWVudE9yZGVyLFxuICBTY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtLFxufSBmcm9tICcuLi8uLi8uLi9tb2RlbC9yZXBsZW5pc2htZW50LW9yZGVyLm1vZGVsJztcbmltcG9ydCB7IFBST0NFU1NfRkVBVFVSRSB9IGZyb20gJy4uLy4uLy4uL3Byb2Nlc3Mvc3RvcmUvcHJvY2Vzcy1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVV0aWxzIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvaW5kZXgnO1xuaW1wb3J0IHsgUExBQ0VEX09SREVSX1BST0NFU1NfSUQgfSBmcm9tICcuLi9jaGVja291dC1zdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSID1cbiAgJ1tDaGVja291dF0gU2NoZWR1bGUgUmVwbGVuaXNobWVudCBPcmRlcic7XG5leHBvcnQgY29uc3QgU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUl9TVUNDRVNTID1cbiAgJ1tDaGVja291dF0gU2NoZWR1bGUgUmVwbGVuaXNobWVudCBPcmRlciBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSX0ZBSUwgPVxuICAnW0NoZWNrb3V0XSBTY2hlZHVsZSBSZXBsZW5pc2htZW50IE9yZGVyIEZhaWwnO1xuZXhwb3J0IGNvbnN0IENMRUFSX1NDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVIgPVxuICAnW0NoZWNrb3V0XSBDbGVhciBTY2hlZHVsZSBSZXBsZW5pc2htZW50IERhdGEnO1xuXG5leHBvcnQgY2xhc3MgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXIgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUjtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBheWxvYWQ6IHtcbiAgICAgIGNhcnRJZDogc3RyaW5nO1xuICAgICAgc2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybTogU2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybTtcbiAgICAgIHRlcm1zQ2hlY2tlZDogYm9vbGVhbjtcbiAgICAgIHVzZXJJZDogc3RyaW5nO1xuICAgIH1cbiAgKSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBQTEFDRURfT1JERVJfUFJPQ0VTU19JRCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5U3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBSZXBsZW5pc2htZW50T3JkZXIpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFBMQUNFRF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlGYWlsQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFNDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVJfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgUExBQ0VEX09SREVSX1BST0NFU1NfSUQsIHBheWxvYWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDbGVhclNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyQWN0aW9uIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDTEVBUl9TQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFBMQUNFRF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSZXBsZW5pc2htZW50T3JkZXJBY3Rpb25zID1cbiAgfCBTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlclxuICB8IFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyU3VjY2Vzc1xuICB8IFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyRmFpbFxuICB8IENsZWFyU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJBY3Rpb247XG4iXX0=