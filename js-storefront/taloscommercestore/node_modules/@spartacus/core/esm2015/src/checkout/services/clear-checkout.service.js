import { Injectable } from '@angular/core';
import { CheckoutDeliveryService } from '../facade/checkout-delivery.service';
import { CheckoutPaymentService } from '../facade/checkout-payment.service';
import * as i0 from "@angular/core";
import * as i1 from "../facade/checkout-delivery.service";
import * as i2 from "../facade/checkout-payment.service";
export class ClearCheckoutService {
    constructor(checkoutDeliveryService, checkoutPaymentService) {
        this.checkoutDeliveryService = checkoutDeliveryService;
        this.checkoutPaymentService = checkoutPaymentService;
    }
    /**
     * Use it to clear checkout state
     */
    resetCheckoutProcesses() {
        this.checkoutDeliveryService.resetSetDeliveryAddressProcess();
        this.checkoutDeliveryService.resetSetDeliveryModeProcess();
        this.checkoutPaymentService.resetSetPaymentDetailsProcess();
    }
}
ClearCheckoutService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ClearCheckoutService_Factory() { return new ClearCheckoutService(i0.ɵɵinject(i1.CheckoutDeliveryService), i0.ɵɵinject(i2.CheckoutPaymentService)); }, token: ClearCheckoutService, providedIn: "root" });
ClearCheckoutService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
ClearCheckoutService.ctorParameters = () => [
    { type: CheckoutDeliveryService },
    { type: CheckoutPaymentService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItY2hlY2tvdXQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9QYXRyeWsvRGVza3RvcC9zcGFydGFjdXMvcHJvamVjdHMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy9jaGVja291dC9zZXJ2aWNlcy9jbGVhci1jaGVja291dC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDOUUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7Ozs7QUFLNUUsTUFBTSxPQUFPLG9CQUFvQjtJQUMvQixZQUNZLHVCQUFnRCxFQUNoRCxzQkFBOEM7UUFEOUMsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUF5QjtRQUNoRCwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0lBQ3ZELENBQUM7SUFFSjs7T0FFRztJQUNILHNCQUFzQjtRQUNwQixJQUFJLENBQUMsdUJBQXVCLENBQUMsOEJBQThCLEVBQUUsQ0FBQztRQUM5RCxJQUFJLENBQUMsdUJBQXVCLENBQUMsMkJBQTJCLEVBQUUsQ0FBQztRQUMzRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsNkJBQTZCLEVBQUUsQ0FBQztJQUM5RCxDQUFDOzs7O1lBaEJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBTFEsdUJBQXVCO1lBQ3ZCLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoZWNrb3V0RGVsaXZlcnlTZXJ2aWNlIH0gZnJvbSAnLi4vZmFjYWRlL2NoZWNrb3V0LWRlbGl2ZXJ5LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2hlY2tvdXRQYXltZW50U2VydmljZSB9IGZyb20gJy4uL2ZhY2FkZS9jaGVja291dC1wYXltZW50LnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgQ2xlYXJDaGVja291dFNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgY2hlY2tvdXREZWxpdmVyeVNlcnZpY2U6IENoZWNrb3V0RGVsaXZlcnlTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBjaGVja291dFBheW1lbnRTZXJ2aWNlOiBDaGVja291dFBheW1lbnRTZXJ2aWNlXG4gICkge31cblxuICAvKipcbiAgICogVXNlIGl0IHRvIGNsZWFyIGNoZWNrb3V0IHN0YXRlXG4gICAqL1xuICByZXNldENoZWNrb3V0UHJvY2Vzc2VzKCk6IHZvaWQge1xuICAgIHRoaXMuY2hlY2tvdXREZWxpdmVyeVNlcnZpY2UucmVzZXRTZXREZWxpdmVyeUFkZHJlc3NQcm9jZXNzKCk7XG4gICAgdGhpcy5jaGVja291dERlbGl2ZXJ5U2VydmljZS5yZXNldFNldERlbGl2ZXJ5TW9kZVByb2Nlc3MoKTtcbiAgICB0aGlzLmNoZWNrb3V0UGF5bWVudFNlcnZpY2UucmVzZXRTZXRQYXltZW50RGV0YWlsc1Byb2Nlc3MoKTtcbiAgfVxufVxuIl19