import { Injectable } from '@angular/core';
import { CheckoutReplenishmentOrderAdapter } from './checkout-replenishment-order.adapter';
import * as i0 from "@angular/core";
import * as i1 from "./checkout-replenishment-order.adapter";
export class CheckoutReplenishmentOrderConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    scheduleReplenishmentOrder(cartId, scheduleReplenishmentForm, termsChecked, userId) {
        return this.adapter.scheduleReplenishmentOrder(cartId, scheduleReplenishmentForm, termsChecked, userId);
    }
}
CheckoutReplenishmentOrderConnector.ɵprov = i0.ɵɵdefineInjectable({ factory: function CheckoutReplenishmentOrderConnector_Factory() { return new CheckoutReplenishmentOrderConnector(i0.ɵɵinject(i1.CheckoutReplenishmentOrderAdapter)); }, token: CheckoutReplenishmentOrderConnector, providedIn: "root" });
CheckoutReplenishmentOrderConnector.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
CheckoutReplenishmentOrderConnector.ctorParameters = () => [
    { type: CheckoutReplenishmentOrderAdapter }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtcmVwbGVuaXNobWVudC1vcmRlci5jb25uZWN0b3IuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvY2hlY2tvdXQvY29ubmVjdG9ycy9yZXBsZW5pc2htZW50LW9yZGVyL2NoZWNrb3V0LXJlcGxlbmlzaG1lbnQtb3JkZXIuY29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNM0MsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7OztBQUszRixNQUFNLE9BQU8sbUNBQW1DO0lBQzlDLFlBQXNCLE9BQTBDO1FBQTFDLFlBQU8sR0FBUCxPQUFPLENBQW1DO0lBQUcsQ0FBQztJQUU3RCwwQkFBMEIsQ0FDL0IsTUFBYyxFQUNkLHlCQUFvRCxFQUNwRCxZQUFxQixFQUNyQixNQUFjO1FBRWQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLDBCQUEwQixDQUM1QyxNQUFNLEVBQ04seUJBQXlCLEVBQ3pCLFlBQVksRUFDWixNQUFNLENBQ1AsQ0FBQztJQUNKLENBQUM7Ozs7WUFsQkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7WUFKUSxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQge1xuICBSZXBsZW5pc2htZW50T3JkZXIsXG4gIFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0sXG59IGZyb20gJy4uLy4uLy4uL21vZGVsL3JlcGxlbmlzaG1lbnQtb3JkZXIubW9kZWwnO1xuaW1wb3J0IHsgQ2hlY2tvdXRSZXBsZW5pc2htZW50T3JkZXJBZGFwdGVyIH0gZnJvbSAnLi9jaGVja291dC1yZXBsZW5pc2htZW50LW9yZGVyLmFkYXB0ZXInO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tvdXRSZXBsZW5pc2htZW50T3JkZXJDb25uZWN0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYWRhcHRlcjogQ2hlY2tvdXRSZXBsZW5pc2htZW50T3JkZXJBZGFwdGVyKSB7fVxuXG4gIHB1YmxpYyBzY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlcihcbiAgICBjYXJ0SWQ6IHN0cmluZyxcbiAgICBzY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtOiBTY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtLFxuICAgIHRlcm1zQ2hlY2tlZDogYm9vbGVhbixcbiAgICB1c2VySWQ6IHN0cmluZ1xuICApOiBPYnNlcnZhYmxlPFJlcGxlbmlzaG1lbnRPcmRlcj4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIuc2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXIoXG4gICAgICBjYXJ0SWQsXG4gICAgICBzY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtLFxuICAgICAgdGVybXNDaGVja2VkLFxuICAgICAgdXNlcklkXG4gICAgKTtcbiAgfVxufVxuIl19