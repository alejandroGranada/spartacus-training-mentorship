export class StringTemplate {
    /**
     * Populates the given template with the variables provided
     *
     * @param templateString template of the OCC endpoint
     * @param templateVariables variables to replace in the template
     * @param encodeVariable encode variable before placing it in the template
     */
    static resolve(templateString, templateVariables, encodeVariable) {
        for (const variableLabel of Object.keys(templateVariables)) {
            const placeholder = new RegExp('\\${' + variableLabel + '}', 'g');
            templateString = templateString.replace(placeholder, 
            // TODO 4.0: default to encodeVariable = true
            encodeVariable
                ? encodeURIComponent(templateVariables[variableLabel])
                : templateVariables[variableLabel]);
        }
        return templateString;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyaW5nLXRlbXBsYXRlLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1BhdHJ5ay9EZXNrdG9wL3NwYXJ0YWN1cy9wcm9qZWN0cy9jb3JlLyIsInNvdXJjZXMiOlsic3JjL2NvbmZpZy91dGlscy9zdHJpbmctdGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLGNBQWM7SUFDekI7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLE9BQU8sQ0FDWixjQUFzQixFQUN0QixpQkFBeUIsRUFDekIsY0FBd0I7UUFFeEIsS0FBSyxNQUFNLGFBQWEsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUU7WUFDMUQsTUFBTSxXQUFXLEdBQUcsSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLGFBQWEsR0FBRyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDbEUsY0FBYyxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQ3JDLFdBQVc7WUFDWCw2Q0FBNkM7WUFDN0MsY0FBYztnQkFDWixDQUFDLENBQUMsa0JBQWtCLENBQUMsaUJBQWlCLENBQUMsYUFBYSxDQUFDLENBQUM7Z0JBQ3RELENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsQ0FDckMsQ0FBQztTQUNIO1FBQ0QsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFN0cmluZ1RlbXBsYXRlIHtcbiAgLyoqXG4gICAqIFBvcHVsYXRlcyB0aGUgZ2l2ZW4gdGVtcGxhdGUgd2l0aCB0aGUgdmFyaWFibGVzIHByb3ZpZGVkXG4gICAqXG4gICAqIEBwYXJhbSB0ZW1wbGF0ZVN0cmluZyB0ZW1wbGF0ZSBvZiB0aGUgT0NDIGVuZHBvaW50XG4gICAqIEBwYXJhbSB0ZW1wbGF0ZVZhcmlhYmxlcyB2YXJpYWJsZXMgdG8gcmVwbGFjZSBpbiB0aGUgdGVtcGxhdGVcbiAgICogQHBhcmFtIGVuY29kZVZhcmlhYmxlIGVuY29kZSB2YXJpYWJsZSBiZWZvcmUgcGxhY2luZyBpdCBpbiB0aGUgdGVtcGxhdGVcbiAgICovXG4gIHN0YXRpYyByZXNvbHZlKFxuICAgIHRlbXBsYXRlU3RyaW5nOiBzdHJpbmcsXG4gICAgdGVtcGxhdGVWYXJpYWJsZXM6IE9iamVjdCxcbiAgICBlbmNvZGVWYXJpYWJsZT86IGJvb2xlYW5cbiAgKTogc3RyaW5nIHtcbiAgICBmb3IgKGNvbnN0IHZhcmlhYmxlTGFiZWwgb2YgT2JqZWN0LmtleXModGVtcGxhdGVWYXJpYWJsZXMpKSB7XG4gICAgICBjb25zdCBwbGFjZWhvbGRlciA9IG5ldyBSZWdFeHAoJ1xcXFwkeycgKyB2YXJpYWJsZUxhYmVsICsgJ30nLCAnZycpO1xuICAgICAgdGVtcGxhdGVTdHJpbmcgPSB0ZW1wbGF0ZVN0cmluZy5yZXBsYWNlKFxuICAgICAgICBwbGFjZWhvbGRlcixcbiAgICAgICAgLy8gVE9ETyA0LjA6IGRlZmF1bHQgdG8gZW5jb2RlVmFyaWFibGUgPSB0cnVlXG4gICAgICAgIGVuY29kZVZhcmlhYmxlXG4gICAgICAgICAgPyBlbmNvZGVVUklDb21wb25lbnQodGVtcGxhdGVWYXJpYWJsZXNbdmFyaWFibGVMYWJlbF0pXG4gICAgICAgICAgOiB0ZW1wbGF0ZVZhcmlhYmxlc1t2YXJpYWJsZUxhYmVsXVxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRlbXBsYXRlU3RyaW5nO1xuICB9XG59XG4iXX0=