import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class BaseSiteNormalizer {
    constructor() { }
    convert(source, target) {
        var _a;
        if (target === undefined) {
            target = Object.assign({}, source);
        }
        // We take the first store as the base store.
        target.baseStore = (_a = source.stores) === null || _a === void 0 ? void 0 : _a[0];
        delete target.stores;
        return target;
    }
}
BaseSiteNormalizer.ɵprov = i0.ɵɵdefineInjectable({ factory: function BaseSiteNormalizer_Factory() { return new BaseSiteNormalizer(); }, token: BaseSiteNormalizer, providedIn: "root" });
BaseSiteNormalizer.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
BaseSiteNormalizer.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1zaXRlLW5vcm1hbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvb2NjL2FkYXB0ZXJzL3NpdGUtY29udGV4dC9jb252ZXJ0ZXJzL2Jhc2Utc2l0ZS1ub3JtYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBTTNDLE1BQU0sT0FBTyxrQkFBa0I7SUFDN0IsZ0JBQWUsQ0FBQztJQUVoQixPQUFPLENBQUMsTUFBb0IsRUFBRSxNQUFpQjs7UUFDN0MsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO1lBQ3hCLE1BQU0sR0FBRyxrQkFBTSxNQUFjLENBQWMsQ0FBQztTQUM3QztRQUVELDZDQUE2QztRQUM3QyxNQUFNLENBQUMsU0FBUyxTQUFHLE1BQU0sQ0FBQyxNQUFNLDBDQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUVyQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDOzs7O1lBZEYsVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTaXRlIH0gZnJvbSAnLi4vLi4vLi4vLi4vbW9kZWwvbWlzYy5tb2RlbCc7XG5pbXBvcnQgeyBDb252ZXJ0ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlsL2NvbnZlcnRlci5zZXJ2aWNlJztcbmltcG9ydCB7IE9jYyB9IGZyb20gJy4uLy4uLy4uL29jYy1tb2RlbHMvb2NjLm1vZGVscyc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQmFzZVNpdGVOb3JtYWxpemVyIGltcGxlbWVudHMgQ29udmVydGVyPE9jYy5CYXNlU2l0ZSwgQmFzZVNpdGU+IHtcbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIGNvbnZlcnQoc291cmNlOiBPY2MuQmFzZVNpdGUsIHRhcmdldD86IEJhc2VTaXRlKTogQmFzZVNpdGUge1xuICAgIGlmICh0YXJnZXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGFyZ2V0ID0geyAuLi4oc291cmNlIGFzIGFueSkgfSBhcyBCYXNlU2l0ZTtcbiAgICB9XG5cbiAgICAvLyBXZSB0YWtlIHRoZSBmaXJzdCBzdG9yZSBhcyB0aGUgYmFzZSBzdG9yZS5cbiAgICB0YXJnZXQuYmFzZVN0b3JlID0gc291cmNlLnN0b3Jlcz8uWzBdO1xuICAgIGRlbGV0ZSB0YXJnZXQuc3RvcmVzO1xuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxufVxuIl19