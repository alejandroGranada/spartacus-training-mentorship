import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class OccCostCenterNormalizer {
    convert(source, target) {
        if (target === undefined) {
            target = Object.assign({}, source);
        }
        target.active = this.normalizeBoolean(source.active);
        return target;
    }
    /**
     * Returns the boolean value for a string property that is supposed
     * to be of type boolean.
     */
    normalizeBoolean(property) {
        return typeof property === 'string' ? property === 'true' : property;
    }
}
OccCostCenterNormalizer.ɵprov = i0.ɵɵdefineInjectable({ factory: function OccCostCenterNormalizer_Factory() { return new OccCostCenterNormalizer(); }, token: OccCostCenterNormalizer, providedIn: "root" });
OccCostCenterNormalizer.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLWNvc3QtY2VudGVyLW5vcm1hbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvUGF0cnlrL0Rlc2t0b3Avc3BhcnRhY3VzL3Byb2plY3RzL2NvcmUvIiwic291cmNlcyI6WyJzcmMvb2NjL2FkYXB0ZXJzL2Nvc3QtY2VudGVyL2NvbnZlcnRlcnMvb2NjLWNvc3QtY2VudGVyLW5vcm1hbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFRM0MsTUFBTSxPQUFPLHVCQUF1QjtJQUVsQyxPQUFPLENBQUMsTUFBc0IsRUFBRSxNQUFtQjtRQUNqRCxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDeEIsTUFBTSxxQkFBUyxNQUFjLENBQUUsQ0FBQztTQUNqQztRQUNELE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVyRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ08sZ0JBQWdCLENBQUMsUUFBMEI7UUFDbkQsT0FBTyxPQUFPLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQztJQUN2RSxDQUFDOzs7O1lBcEJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvc3RDZW50ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi9tb2RlbC9vcmctdW5pdC5tb2RlbCc7XG5pbXBvcnQgeyBDb252ZXJ0ZXIgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlsL2NvbnZlcnRlci5zZXJ2aWNlJztcbmltcG9ydCB7IE9jYyB9IGZyb20gJy4uLy4uLy4uL29jYy1tb2RlbHMvb2NjLm1vZGVscyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBPY2NDb3N0Q2VudGVyTm9ybWFsaXplclxuICBpbXBsZW1lbnRzIENvbnZlcnRlcjxPY2MuQ29zdENlbnRlciwgQ29zdENlbnRlcj4ge1xuICBjb252ZXJ0KHNvdXJjZTogT2NjLkNvc3RDZW50ZXIsIHRhcmdldD86IENvc3RDZW50ZXIpOiBDb3N0Q2VudGVyIHtcbiAgICBpZiAodGFyZ2V0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRhcmdldCA9IHsgLi4uKHNvdXJjZSBhcyBhbnkpIH07XG4gICAgfVxuICAgIHRhcmdldC5hY3RpdmUgPSB0aGlzLm5vcm1hbGl6ZUJvb2xlYW4oc291cmNlLmFjdGl2ZSk7XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGJvb2xlYW4gdmFsdWUgZm9yIGEgc3RyaW5nIHByb3BlcnR5IHRoYXQgaXMgc3VwcG9zZWRcbiAgICogdG8gYmUgb2YgdHlwZSBib29sZWFuLlxuICAgKi9cbiAgcHJvdGVjdGVkIG5vcm1hbGl6ZUJvb2xlYW4ocHJvcGVydHk6IHN0cmluZyB8IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICByZXR1cm4gdHlwZW9mIHByb3BlcnR5ID09PSAnc3RyaW5nJyA/IHByb3BlcnR5ID09PSAndHJ1ZScgOiBwcm9wZXJ0eTtcbiAgfVxufVxuIl19