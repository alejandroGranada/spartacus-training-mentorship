export class TimeUtils {
    /**
     * Returns the local timezone in a format that can be appended to a date-like string.
     * @param invert (default: false): returns the opposite operator relative to the local timezone
     *
     * @example
     * When locale is set to a CEST timezone, `getLocalTimezoneOffset()` returns '+02:00'
     * and `getLocalTimezoneOffset(true)` returns '-02:00'
     */
    static getLocalTimezoneOffset(invert) {
        const offset = new Date().getTimezoneOffset() * -1;
        const hours = Math.abs(Math.floor(offset / 60))
            .toString()
            .padStart(2, '0');
        const minutes = (offset % 60).toString().padStart(2, '0');
        const sign = offset >= 0 ? (invert ? `-` : `+`) : invert ? `+` : `-`;
        return `${sign}${hours}:${minutes}`;
    }
    static convertDateToDatetime(date, endOfDay) {
        return `${date}T${!endOfDay ? '00:00:00' : '23:59:59'}${TimeUtils.getLocalTimezoneOffset()}`;
    }
    static convertDatetimeToDate(datetime) {
        return new Date(`${datetime.substring(0, 19)}${TimeUtils.getLocalTimezoneOffset(true)}`)
            .toISOString()
            .substring(0, 10);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9QYXRyeWsvRGVza3RvcC9zcGFydGFjdXMvcHJvamVjdHMvY29yZS8iLCJzb3VyY2VzIjpbInNyYy91dGlsL3RpbWUtdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLFNBQVM7SUFDcEI7Ozs7Ozs7T0FPRztJQUNILE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQyxNQUFnQjtRQUM1QyxNQUFNLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDbkQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQzthQUM1QyxRQUFRLEVBQUU7YUFDVixRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLE1BQU0sT0FBTyxHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDMUQsTUFBTSxJQUFJLEdBQUcsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFDckUsT0FBTyxHQUFHLElBQUksR0FBRyxLQUFLLElBQUksT0FBTyxFQUFFLENBQUM7SUFDdEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFZLEVBQUUsUUFBa0I7UUFDM0QsT0FBTyxHQUFHLElBQUksSUFDWixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxVQUMzQixHQUFHLFNBQVMsQ0FBQyxzQkFBc0IsRUFBRSxFQUFFLENBQUM7SUFDMUMsQ0FBQztJQUVELE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxRQUFnQjtRQUMzQyxPQUFPLElBQUksSUFBSSxDQUNiLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxFQUFFLENBQ3hFO2FBQ0UsV0FBVyxFQUFFO2FBQ2IsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN0QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVGltZVV0aWxzIHtcbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGxvY2FsIHRpbWV6b25lIGluIGEgZm9ybWF0IHRoYXQgY2FuIGJlIGFwcGVuZGVkIHRvIGEgZGF0ZS1saWtlIHN0cmluZy5cbiAgICogQHBhcmFtIGludmVydCAoZGVmYXVsdDogZmFsc2UpOiByZXR1cm5zIHRoZSBvcHBvc2l0ZSBvcGVyYXRvciByZWxhdGl2ZSB0byB0aGUgbG9jYWwgdGltZXpvbmVcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogV2hlbiBsb2NhbGUgaXMgc2V0IHRvIGEgQ0VTVCB0aW1lem9uZSwgYGdldExvY2FsVGltZXpvbmVPZmZzZXQoKWAgcmV0dXJucyAnKzAyOjAwJ1xuICAgKiBhbmQgYGdldExvY2FsVGltZXpvbmVPZmZzZXQodHJ1ZSlgIHJldHVybnMgJy0wMjowMCdcbiAgICovXG4gIHN0YXRpYyBnZXRMb2NhbFRpbWV6b25lT2Zmc2V0KGludmVydD86IGJvb2xlYW4pOiBzdHJpbmcge1xuICAgIGNvbnN0IG9mZnNldCA9IG5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIC0xO1xuICAgIGNvbnN0IGhvdXJzID0gTWF0aC5hYnMoTWF0aC5mbG9vcihvZmZzZXQgLyA2MCkpXG4gICAgICAudG9TdHJpbmcoKVxuICAgICAgLnBhZFN0YXJ0KDIsICcwJyk7XG4gICAgY29uc3QgbWludXRlcyA9IChvZmZzZXQgJSA2MCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIGNvbnN0IHNpZ24gPSBvZmZzZXQgPj0gMCA/IChpbnZlcnQgPyBgLWAgOiBgK2ApIDogaW52ZXJ0ID8gYCtgIDogYC1gO1xuICAgIHJldHVybiBgJHtzaWdufSR7aG91cnN9OiR7bWludXRlc31gO1xuICB9XG5cbiAgc3RhdGljIGNvbnZlcnREYXRlVG9EYXRldGltZShkYXRlOiBzdHJpbmcsIGVuZE9mRGF5PzogYm9vbGVhbik6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAke2RhdGV9VCR7XG4gICAgICAhZW5kT2ZEYXkgPyAnMDA6MDA6MDAnIDogJzIzOjU5OjU5J1xuICAgIH0ke1RpbWVVdGlscy5nZXRMb2NhbFRpbWV6b25lT2Zmc2V0KCl9YDtcbiAgfVxuXG4gIHN0YXRpYyBjb252ZXJ0RGF0ZXRpbWVUb0RhdGUoZGF0ZXRpbWU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKFxuICAgICAgYCR7ZGF0ZXRpbWUuc3Vic3RyaW5nKDAsIDE5KX0ke1RpbWVVdGlscy5nZXRMb2NhbFRpbWV6b25lT2Zmc2V0KHRydWUpfWBcbiAgICApXG4gICAgICAudG9JU09TdHJpbmcoKVxuICAgICAgLnN1YnN0cmluZygwLCAxMCk7XG4gIH1cbn1cbiJdfQ==