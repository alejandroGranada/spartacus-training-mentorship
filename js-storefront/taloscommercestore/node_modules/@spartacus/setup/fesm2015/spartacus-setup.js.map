{"version":3,"file":"spartacus-setup.js","sources":["../../../core-libs/setup/recipes/b2b/config/default-b2b-occ-config.ts","../../../core-libs/setup/recipes/b2b/config/default-b2b-checkout-config.ts","../../../core-libs/setup/recipes/b2b/b2b-storefront.module.ts","../../../core-libs/setup/spartacus-setup.ts"],"sourcesContent":["import { OccConfig } from '@spartacus/core';\n\nexport const defaultB2bOccConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        user: 'orgUsers/${userId}',\n        userUpdateProfile: 'users/${userId}',\n        userCloseAccount: 'users/${userId}',\n        addEntries:\n          'orgUsers/${userId}/carts/${cartId}/entries?quantity=${quantity}',\n        setDeliveryAddress:\n          'orgUsers/${userId}/carts/${cartId}/addresses/delivery',\n        placeOrder: 'orgUsers/${userId}/orders?fields=FULL',\n        scheduleReplenishmentOrder:\n          'orgUsers/${userId}/replenishmentOrders?fields=FULL,costCenter(FULL),purchaseOrderNumber,paymentType',\n        replenishmentOrderDetails:\n          'users/${userId}/replenishmentOrders/${replenishmentOrderCode}?fields=FULL,costCenter(FULL),purchaseOrderNumber,paymentType,user',\n        replenishmentOrderDetailsHistory:\n          'users/${userId}/replenishmentOrders/${replenishmentOrderCode}/orders',\n        cancelReplenishmentOrder:\n          'users/${userId}/replenishmentOrders/${replenishmentOrderCode}?fields=FULL,costCenter(FULL),purchaseOrderNumber,paymentType,user',\n        replenishmentOrderHistory:\n          'users/${userId}/replenishmentOrders?fields=FULL,replenishmentOrders(FULL, purchaseOrderNumber)',\n      },\n    },\n  },\n};\n","import {\n  CheckoutConfig,\n  CheckoutStepType,\n  DeliveryModePreferences,\n} from '@spartacus/storefront';\n\nexport const defaultB2bCheckoutConfig: CheckoutConfig = {\n  checkout: {\n    steps: [\n      {\n        id: 'paymentType',\n        name: 'checkoutProgress.methodOfPayment',\n        routeName: 'checkoutPaymentType',\n        type: [CheckoutStepType.PAYMENT_TYPE],\n      },\n      {\n        id: 'shippingAddress',\n        name: 'checkoutProgress.shippingAddress',\n        routeName: 'checkoutShippingAddress',\n        type: [CheckoutStepType.SHIPPING_ADDRESS],\n      },\n      {\n        id: 'deliveryMode',\n        name: 'checkoutProgress.deliveryMode',\n        routeName: 'checkoutDeliveryMode',\n        type: [CheckoutStepType.DELIVERY_MODE],\n      },\n      {\n        id: 'paymentDetails',\n        name: 'checkoutProgress.paymentDetails',\n        routeName: 'checkoutPaymentDetails',\n        type: [CheckoutStepType.PAYMENT_DETAILS],\n      },\n      {\n        id: 'reviewOrder',\n        name: 'checkoutProgress.reviewOrder',\n        routeName: 'checkoutReviewOrder',\n        type: [CheckoutStepType.REVIEW_ORDER],\n      },\n    ],\n    express: false,\n    defaultDeliveryMode: [DeliveryModePreferences.FREE],\n    guest: false,\n  },\n};\n","import { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  CostCenterModule,\n  provideConfig,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport {\n  CmsLibModule,\n  defaultCmsContentProviders,\n  layoutConfig,\n  mediaConfig,\n  StorefrontConfig,\n  StorefrontModule,\n} from '@spartacus/storefront';\nimport { defaultB2bCheckoutConfig } from './config/default-b2b-checkout-config';\nimport { defaultB2bOccConfig } from './config/default-b2b-occ-config';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    StorefrontModule,\n\n    // the cms lib module contains all components that added in the bundle\n    CmsLibModule,\n    CostCenterModule.forRoot(),\n  ],\n  providers: [\n    provideDefaultConfig(layoutConfig),\n    provideDefaultConfig(mediaConfig),\n    provideDefaultConfig(defaultB2bOccConfig),\n    provideDefaultConfig(defaultB2bCheckoutConfig),\n    ...defaultCmsContentProviders,\n  ],\n  exports: [StorefrontModule],\n})\nexport class B2bStorefrontModule {\n  static withConfig(\n    config?: StorefrontConfig\n  ): ModuleWithProviders<B2bStorefrontModule> {\n    return {\n      ngModule: B2bStorefrontModule,\n      providers: [provideConfig(config)],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;MAEa,mBAAmB,GAAc;IAC5C,OAAO,EAAE;QACP,GAAG,EAAE;YACH,SAAS,EAAE;gBACT,IAAI,EAAE,oBAAoB;gBAC1B,iBAAiB,EAAE,iBAAiB;gBACpC,gBAAgB,EAAE,iBAAiB;gBACnC,UAAU,EACR,iEAAiE;gBACnE,kBAAkB,EAChB,uDAAuD;gBACzD,UAAU,EAAE,uCAAuC;gBACnD,0BAA0B,EACxB,qGAAqG;gBACvG,yBAAyB,EACvB,iIAAiI;gBACnI,gCAAgC,EAC9B,sEAAsE;gBACxE,wBAAwB,EACtB,iIAAiI;gBACnI,yBAAyB,EACvB,gGAAgG;aACnG;SACF;KACF;;;MCpBU,wBAAwB,GAAmB;IACtD,QAAQ,EAAE;QACR,KAAK,EAAE;YACL;gBACE,EAAE,EAAE,aAAa;gBACjB,IAAI,EAAE,kCAAkC;gBACxC,SAAS,EAAE,qBAAqB;gBAChC,IAAI,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAC;aACtC;YACD;gBACE,EAAE,EAAE,iBAAiB;gBACrB,IAAI,EAAE,kCAAkC;gBACxC,SAAS,EAAE,yBAAyB;gBACpC,IAAI,EAAE,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;aAC1C;YACD;gBACE,EAAE,EAAE,cAAc;gBAClB,IAAI,EAAE,+BAA+B;gBACrC,SAAS,EAAE,sBAAsB;gBACjC,IAAI,EAAE,CAAC,gBAAgB,CAAC,aAAa,CAAC;aACvC;YACD;gBACE,EAAE,EAAE,gBAAgB;gBACpB,IAAI,EAAE,iCAAiC;gBACvC,SAAS,EAAE,wBAAwB;gBACnC,IAAI,EAAE,CAAC,gBAAgB,CAAC,eAAe,CAAC;aACzC;YACD;gBACE,EAAE,EAAE,aAAa;gBACjB,IAAI,EAAE,8BAA8B;gBACpC,SAAS,EAAE,qBAAqB;gBAChC,IAAI,EAAE,CAAC,gBAAgB,CAAC,YAAY,CAAC;aACtC;SACF;QACD,OAAO,EAAE,KAAK;QACd,mBAAmB,EAAE,CAAC,uBAAuB,CAAC,IAAI,CAAC;QACnD,KAAK,EAAE,KAAK;KACb;;;MCPU,mBAAmB;IAC9B,OAAO,UAAU,CACf,MAAyB;QAEzB,OAAO;YACL,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SACnC,CAAC;KACH;;;YA1BF,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,gBAAgB;oBAChB,gBAAgB;;oBAGhB,YAAY;oBACZ,gBAAgB,CAAC,OAAO,EAAE;iBAC3B;gBACD,SAAS,EAAE;oBACT,oBAAoB,CAAC,YAAY,CAAC;oBAClC,oBAAoB,CAAC,WAAW,CAAC;oBACjC,oBAAoB,CAAC,mBAAmB,CAAC;oBACzC,oBAAoB,CAAC,wBAAwB,CAAC;oBAC9C,GAAG,0BAA0B;iBAC9B;gBACD,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;ACnCD;;;;;;"}