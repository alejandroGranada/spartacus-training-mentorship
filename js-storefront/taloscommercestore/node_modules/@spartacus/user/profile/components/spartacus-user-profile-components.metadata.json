{"__symbolic":"module","version":4,"metadata":{"CloseAccountModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":17,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":18,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":19,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"IconModule","line":20,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":21,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":24,"character":4},"arguments":[{"cmsComponents":{"CloseAccountComponent":{"component":{"__symbolic":"reference","name":"CloseAccountComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"AuthGuard","line":28,"character":19}]}}}]}],"declarations":[{"__symbolic":"reference","name":"CloseAccountComponent"},{"__symbolic":"reference","name":"CloseAccountModalComponent"}]}]}],"members":{}},"CloseAccountModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"cx-close-account-modal","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":16,"character":19},"member":"OnPush"},"template":"<ng-container *ngIf=\"isLoggedIn$ | async\">\n  <div class=\"modal-header cx-dialog-header\">\n    <h3 class=\"modal-title\">\n      {{ 'closeAccount.confirmAccountClosure' | cxTranslate }}\n    </h3>\n    <button\n      type=\"button\"\n      class=\"close\"\n      aria-label=\"Close\"\n      (click)=\"dismissModal()\"\n    >\n      <span aria-hidden=\"true\">\n        <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n      </span>\n    </button>\n  </div>\n\n  <div *ngIf=\"isLoading$ | async; else loaded\">\n    <div class=\"cx-spinner\">\n      <cx-spinner> </cx-spinner>\n    </div>\n  </div>\n\n  <ng-template #loaded>\n    <div class=\"modal-body\">\n      <div class=\"cx-row\">\n        <p class=\"cx-confirmation\">\n          {{ 'closeAccount.confirmAccountClosureMessage' | cxTranslate }}\n        </p>\n      </div>\n      <div class=\"cx-row\">\n        <div class=\"cx-btn-group\">\n          <button class=\"btn btn-primary\" (click)=\"closeAccount()\">\n            {{ 'closeAccount.closeMyAccount' | cxTranslate }}\n          </button>\n          <button (click)=\"dismissModal()\" class=\"btn btn-block btn-secondary\">\n            {{ 'common.cancel' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</ng-container>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/storefront","name":"ModalService","line":25,"character":28},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthService","line":26,"character":27},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":27,"character":36},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":28,"character":30},{"__symbolic":"reference","module":"@spartacus/core","name":"TranslationService","line":29,"character":34},{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserProfileFacade","line":30,"character":27}]}],"ngOnInit":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"dismissModal":[{"__symbolic":"method"}],"closeAccount":[{"__symbolic":"method"}]}},"CloseAccountComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cx-close-account","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":19},"member":"OnPush"},"template":"<div class=\"col-lg-8 col-md-9\">\n  <div class=\"row cx-btn-group\">\n    <div class=\"col-sm-3\">\n      <a\n        [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n        class=\"btn btn-block btn-secondary\"\n        >{{ 'common.cancel' | cxTranslate }}</a\n      >\n    </div>\n    <div class=\"col-sm-6\">\n      <button class=\"btn btn-primary\" (click)=\"openModal()\">\n        {{ 'closeAccount.closeMyAccount' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/storefront","name":"ModalService","line":11,"character":38}]}],"openModal":[{"__symbolic":"method"}]}},"ForgotPasswordComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":14,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":17,"character":35},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":18,"character":30},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthConfigService","line":19,"character":33},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":20,"character":29}]}],"requestEmail":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"redirect":[{"__symbolic":"method"}]}},"ForgotPasswordComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cx-forgot-password","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":19},"member":"OnPush"},"template":"<cx-spinner class=\"overlay\" *ngIf=\"isUpdating$ | async\"> </cx-spinner>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n  <label>\n    <span class=\"label-content\">{{\n      'forgottenPassword.emailAddress.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"email\"\n      class=\"form-control\"\n      placeholder=\"{{\n        'forgottenPassword.emailAddress.placeholder' | cxTranslate\n      }}\"\n      formControlName=\"userEmail\"\n    />\n    <cx-form-errors [control]=\"form.get('userEmail')\"></cx-form-errors>\n  </label>\n\n  <a\n    class=\"btn btn-block btn-secondary\"\n    [routerLink]=\"{ cxRoute: 'login' } | cxUrl\"\n    >{{ 'common.cancel' | cxTranslate }}</a\n  >\n  <button class=\"btn btn-block btn-primary\" [disabled]=\"form.disabled\">\n    {{ 'common.submit' | cxTranslate }}\n  </button>\n</form>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ForgotPasswordComponentService"}]}],"onSubmit":[{"__symbolic":"method"}]}},"ForgotPasswordModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":19,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":23,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":24,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":25,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":26,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":27,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":30,"character":4},"arguments":[{"cmsComponents":{"ForgotPasswordComponent":{"component":{"__symbolic":"reference","name":"ForgotPasswordComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"NotAuthGuard","line":34,"character":19}],"providers":[{"provide":{"__symbolic":"reference","name":"ForgotPasswordComponentService"},"useClass":{"__symbolic":"reference","name":"ForgotPasswordComponentService"},"deps":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":40,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":41,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthConfigService","line":42,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":43,"character":16}]}]}}}]}],"declarations":[{"__symbolic":"reference","name":"ForgotPasswordComponent"}]}]}],"members":{}},"RegisterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"cx-register","template":"<section\n  class=\"cx-page-section container\"\n  *ngIf=\"!(isLoading$ | async); else loading\"\n>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <div class=\"cx-section\">\n        <form (ngSubmit)=\"submitForm()\" [formGroup]=\"registerForm\">\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.title' | cxTranslate\n              }}</span>\n              <select formControlName=\"titleCode\" class=\"form-control\">\n                <option selected value=\"\" disabled>\n                  {{ 'register.selectTitle' | cxTranslate }}\n                </option>\n                <option\n                  *ngFor=\"let title of titles$ | async\"\n                  [value]=\"title.code\"\n                >\n                  {{ title.name }}\n                </option>\n              </select>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.firstName.label' | cxTranslate\n              }}</span>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                name=\"firstname\"\n                placeholder=\"{{\n                  'register.firstName.placeholder' | cxTranslate\n                }}\"\n                formControlName=\"firstName\"\n              />\n              <cx-form-errors\n                [control]=\"registerForm.get('firstName')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.lastName.label' | cxTranslate\n              }}</span>\n              <input\n                class=\"form-control\"\n                type=\"text\"\n                name=\"lastname\"\n                placeholder=\"{{\n                  'register.lastName.placeholder' | cxTranslate\n                }}\"\n                formControlName=\"lastName\"\n              />\n              <cx-form-errors\n                [control]=\"registerForm.get('lastName')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.emailAddress.label' | cxTranslate\n              }}</span>\n              <input\n                class=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"{{\n                  'register.emailAddress.placeholder' | cxTranslate\n                }}\"\n                formControlName=\"email\"\n              />\n              <cx-form-errors\n                [control]=\"registerForm.get('email')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.password.label' | cxTranslate\n              }}</span>\n              <input\n                class=\"form-control\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"{{\n                  'register.password.placeholder' | cxTranslate\n                }}\"\n                formControlName=\"password\"\n              />\n              <cx-form-errors\n                [control]=\"registerForm.get('password')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-content\">{{\n                'register.confirmPassword.label' | cxTranslate\n              }}</span>\n              <input\n                class=\"form-control\"\n                type=\"password\"\n                name=\"confirmpassword\"\n                placeholder=\"{{\n                  'register.confirmPassword.placeholder' | cxTranslate\n                }}\"\n                formControlName=\"passwordconf\"\n              />\n              <cx-form-errors\n                [control]=\"registerForm.get('passwordconf')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <label *ngIf=\"anonymousConsent$ | async as anonymousConsent\">\n                <input\n                  type=\"checkbox\"\n                  name=\"newsletter\"\n                  class=\"form-check-input\"\n                  formControlName=\"newsletter\"\n                  [checked]=\"isConsentGiven(anonymousConsent.consent)\"\n                />\n                <span class=\"form-check-label\">\n                  {{ anonymousConsent.template }}\n                </span>\n              </label>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  name=\"termsandconditions\"\n                  formControlName=\"termsandconditions\"\n                />\n                <span class=\"form-check-label\">\n                  {{ 'register.confirmThatRead' | cxTranslate }}\n                  <a\n                    [routerLink]=\"{ cxRoute: 'termsAndConditions' } | cxUrl\"\n                    target=\"_blank\"\n                  >\n                    {{ 'register.termsAndConditions' | cxTranslate }}\n                  </a>\n                </span>\n                <cx-form-errors\n                  [control]=\"registerForm.get('termsandconditions')\"\n                ></cx-form-errors>\n              </label>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-block btn-primary\">\n            {{ 'register.register' | cxTranslate }}\n          </button>\n          <a\n            class=\"cx-login-link btn-link\"\n            [routerLink]=\"{ cxRoute: 'login' } | cxUrl\"\n            >{{ 'register.signIn' | cxTranslate }}</a\n          >\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserRegisterFacade","line":70,"character":28},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":71,"character":36},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":72,"character":18},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":73,"character":22},{"__symbolic":"reference","module":"@spartacus/core","name":"AnonymousConsentsService","line":74,"character":40},{"__symbolic":"reference","module":"@spartacus/core","name":"AnonymousConsentsConfig","line":75,"character":39},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthConfigService","line":76,"character":33}]}],"ngOnInit":[{"__symbolic":"method"}],"submitForm":[{"__symbolic":"method"}],"registerUser":[{"__symbolic":"method"}],"titleSelected":[{"__symbolic":"method"}],"collectDataFromRegisterForm":[{"__symbolic":"method"}],"isConsentGiven":[{"__symbolic":"method"}],"isConsentRequired":[{"__symbolic":"method"}],"onRegisterUserSuccess":[{"__symbolic":"method"}],"toggleAnonymousConsent":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"RegisterComponentModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":18,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":19,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":20,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":21,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":22,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":25,"character":4},"arguments":[{"cmsComponents":{"RegisterCustomerComponent":{"component":{"__symbolic":"reference","name":"RegisterComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"NotAuthGuard","line":29,"character":19}]}}}]}],"declarations":[{"__symbolic":"reference","name":"RegisterComponent"}]}]}],"members":{}},"ResetPasswordComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":15,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":18,"character":35},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":19,"character":30},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":20,"character":29}]}],"resetPassword":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"redirect":[{"__symbolic":"method"}]}},"ResetPasswordComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"cx-reset-password","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":8,"character":19},"member":"OnPush"},"host":{"class":"user-form"},"template":"<cx-spinner class=\"overlay\" *ngIf=\"isUpdating$ | async\"> </cx-spinner>\n\n<form\n  *ngIf=\"token$ | async as token\"\n  (ngSubmit)=\"onSubmit(token)\"\n  [formGroup]=\"form\"\n>\n  <label>\n    <span class=\"label-content\">{{\n      'register.newPassword' | cxTranslate\n    }}</span>\n    <input\n      class=\"form-control\"\n      type=\"password\"\n      placeholder=\"{{ 'register.password.placeholder' | cxTranslate }}\"\n      formControlName=\"password\"\n    />\n    <cx-form-errors [control]=\"form.get('password')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'register.passwordMinRequirements' | cxTranslate\n    }}</span>\n    <input\n      class=\"form-control\"\n      type=\"password\"\n      placeholder=\"{{ 'register.confirmPassword.placeholder' | cxTranslate }}\"\n      formControlName=\"passwordConfirm\"\n    />\n    <cx-form-errors [control]=\"form.get('passwordConfirm')\"></cx-form-errors>\n  </label>\n\n  <button class=\"btn btn-block btn-primary\" [disabled]=\"form.disabled\">\n    {{ 'register.resetPassword' | cxTranslate }}\n  </button>\n</form>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ResetPasswordComponentService"}]}],"onSubmit":[{"__symbolic":"method"}]}},"ResetPasswordModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":17,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":22,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":23,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":24,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":25,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":28,"character":4},"arguments":[{"cmsComponents":{"ResetPasswordComponent":{"component":{"__symbolic":"reference","name":"ResetPasswordComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"NotAuthGuard","line":32,"character":19}],"providers":[{"provide":{"__symbolic":"reference","name":"ResetPasswordComponentService"},"useClass":{"__symbolic":"reference","name":"ResetPasswordComponentService"},"deps":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":37,"character":21},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":37,"character":41},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":37,"character":57}]}]}}}]}],"declarations":[{"__symbolic":"reference","name":"ResetPasswordComponent"}]}]}],"members":{}},"UpdateEmailComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":13,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserEmailFacade","line":16,"character":25},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":17,"character":30},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":18,"character":36},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthService","line":19,"character":27}]}],"save":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"UpdateEmailComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cx-update-email","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":19},"member":"OnPush"},"host":{"class":"user-form"},"template":"<cx-spinner class=\"overlay\" *ngIf=\"isUpdating$ | async\"> </cx-spinner>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n  <label>\n    <span class=\"label-content\">{{\n      'updateEmailForm.newEmailAddress.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"email\"\n      name=\"email\"\n      formControlName=\"email\"\n      placeholder=\"{{\n        'updateEmailForm.newEmailAddress.placeholder' | cxTranslate\n      }}\"\n      class=\"form-control\"\n    />\n    <cx-form-errors [control]=\"form.get('email')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updateEmailForm.confirmNewEmailAddress.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"email\"\n      name=\"confirmEmail\"\n      formControlName=\"confirmEmail\"\n      placeholder=\"{{\n        'updateEmailForm.confirmNewEmailAddress.placeholder' | cxTranslate\n      }}\"\n      class=\"form-control\"\n    />\n    <cx-form-errors [control]=\"form.get('confirmEmail')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updateEmailForm.password.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"password\"\n      name=\"password\"\n      formControlName=\"password\"\n      placeholder=\"{{ 'updateEmailForm.password.placeholder' | cxTranslate }}\"\n      class=\"form-control\"\n      autocomplete=\"new-password\"\n    />\n    <cx-form-errors [control]=\"form.get('password')\"></cx-form-errors>\n  </label>\n\n  <a\n    class=\"btn btn-block btn-secondary\"\n    [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n  >\n    {{ 'common.cancel' | cxTranslate }}\n  </a>\n\n  <button class=\"btn btn-block btn-primary\" [disabled]=\"form.disabled\">\n    {{ 'common.save' | cxTranslate }}\n  </button>\n</form>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"UpdateEmailComponentService"}]}],"onSubmit":[{"__symbolic":"method"}]}},"UpdateEmailModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":19,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":24,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":25,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":26,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":27,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":28,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":31,"character":4},"arguments":[{"cmsComponents":{"UpdateEmailComponent":{"component":{"__symbolic":"reference","name":"UpdateEmailComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"AuthGuard","line":35,"character":19}],"providers":[{"provide":{"__symbolic":"reference","name":"UpdateEmailComponentService"},"useClass":{"__symbolic":"reference","name":"UpdateEmailComponentService"},"deps":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserEmailFacade","line":41,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":42,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":43,"character":16},{"__symbolic":"reference","module":"@spartacus/core","name":"AuthService","line":44,"character":16}]}]}}}]}],"declarations":[{"__symbolic":"reference","name":"UpdateEmailComponent"}]}]}],"members":{}},"UpdatePasswordComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":15,"character":35},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":16,"character":30},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":17,"character":36}]}],"updatePassword":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"UpdatePasswordComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"cx-update-password","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":19},"member":"OnPush"},"host":{"class":"user-form"},"template":"<cx-spinner class=\"overlay\" *ngIf=\"isUpdating$ | async\"> </cx-spinner>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n  <label>\n    <span class=\"label-content\">{{\n      'updatePasswordForm.oldPassword.label' | cxTranslate\n    }}</span>\n    <input\n      class=\"form-control\"\n      type=\"password\"\n      name=\"oldPassword\"\n      placeholder=\"{{\n        'updatePasswordForm.oldPassword.placeholder' | cxTranslate\n      }}\"\n      formControlName=\"oldPassword\"\n    />\n    <cx-form-errors [control]=\"form.get('oldPassword')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updatePasswordForm.newPassword.label' | cxTranslate\n    }}</span>\n    <input\n      class=\"form-control\"\n      type=\"password\"\n      name=\"newPassword\"\n      placeholder=\"{{\n        'updatePasswordForm.newPassword.placeholder' | cxTranslate\n      }}\"\n      formControlName=\"newPassword\"\n    />\n    <cx-form-errors [control]=\"form.get('newPassword')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updatePasswordForm.confirmPassword.label' | cxTranslate\n    }}</span>\n    <input\n      class=\"form-control\"\n      type=\"password\"\n      name=\"newPasswordConfirm\"\n      placeholder=\"{{\n        'updatePasswordForm.confirmPassword.placeholder' | cxTranslate\n      }}\"\n      formControlName=\"newPasswordConfirm\"\n    />\n    <cx-form-errors [control]=\"form.get('newPasswordConfirm')\"></cx-form-errors>\n  </label>\n\n  <a\n    class=\"btn btn-block btn-secondary\"\n    [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n  >\n    {{ 'common.cancel' | cxTranslate }}\n  </a>\n\n  <button class=\"btn btn-block btn-primary\" [disabled]=\"form.disabled\">\n    {{ 'common.save' | cxTranslate }}\n  </button>\n</form>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"UpdatePasswordComponentService"}]}],"onSubmit":[{"__symbolic":"method"}]}},"UpdatePasswordModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":18,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":23,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":24,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":25,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":26,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":27,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":30,"character":4},"arguments":[{"cmsComponents":{"UpdatePasswordComponent":{"component":{"__symbolic":"reference","name":"UpdatePasswordComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"AuthGuard","line":34,"character":19}],"providers":[{"provide":{"__symbolic":"reference","name":"UpdatePasswordComponentService"},"useClass":{"__symbolic":"reference","name":"UpdatePasswordComponentService"},"deps":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserPasswordFacade","line":39,"character":21},{"__symbolic":"reference","module":"@spartacus/core","name":"RoutingService","line":39,"character":41},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":39,"character":57}]}]}}}]}],"declarations":[{"__symbolic":"reference","name":"UpdatePasswordComponent"}]}]}],"members":{}},"UpdateProfileComponentService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserProfileFacade","line":11,"character":27},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":12,"character":36}]}],"updateProfile":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"UpdateProfileComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"cx-update-profile","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":9,"character":19},"member":"OnPush"},"host":{"class":"user-form"},"template":"<cx-spinner class=\"overlay\" *ngIf=\"isUpdating$ | async\"> </cx-spinner>\n\n<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n  <label>\n    <span class=\"label-content\">{{\n      'updateProfileForm.title' | cxTranslate\n    }}</span>\n    <select formControlName=\"titleCode\" class=\"form-control\">\n      <option value=\"\">{{ 'updateProfileForm.none' | cxTranslate }}</option>\n      <option *ngFor=\"let title of titles$ | async\" [value]=\"title.code\">\n        {{ title.name }}\n      </option>\n    </select>\n  </label>\n  <label>\n    <span class=\"label-content\">{{\n      'updateProfileForm.firstName.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"firstName\"\n      placeholder=\"{{\n        'updateProfileForm.firstName.placeholder' | cxTranslate\n      }}\"\n      formControlName=\"firstName\"\n    />\n    <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updateProfileForm.lastName.label' | cxTranslate\n    }}</span>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"lastName\"\n      placeholder=\"{{ 'updateProfileForm.lastName.placeholder' | cxTranslate }}\"\n      formControlName=\"lastName\"\n    />\n    <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n  </label>\n\n  <label>\n    <span class=\"label-content\">{{\n      'updateProfileForm.customerId' | cxTranslate\n    }}</span>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"customerId\"\n      formControlName=\"customerId\"\n      readonly\n    />\n    <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n  </label>\n\n  <a\n    class=\"btn btn-block btn-secondary\"\n    [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n  >\n    {{ 'common.cancel' | cxTranslate }}\n  </a>\n\n  <button class=\"btn btn-block btn-primary\" [disabled]=\"form.disabled\">\n    {{ 'common.save' | cxTranslate }}\n  </button>\n</form>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"UpdateProfileComponentService"}]}],"onSubmit":[{"__symbolic":"method"}]}},"UpdateProfileModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":17,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":21,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"SpinnerModule","line":22,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"I18nModule","line":23,"character":4},{"__symbolic":"reference","module":"@spartacus/storefront","name":"FormErrorsModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":25,"character":4},{"__symbolic":"reference","module":"@spartacus/core","name":"UrlModule","line":26,"character":4}],"providers":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@spartacus/core","name":"provideDefaultConfig","line":29,"character":4},"arguments":[{"cmsComponents":{"UpdateProfileComponent":{"component":{"__symbolic":"reference","name":"UpdateProfileComponent"},"guards":[{"__symbolic":"reference","module":"@spartacus/core","name":"AuthGuard","line":33,"character":19}],"providers":[{"provide":{"__symbolic":"reference","name":"UpdateProfileComponentService"},"useClass":{"__symbolic":"reference","name":"UpdateProfileComponentService"},"deps":[{"__symbolic":"reference","module":"@spartacus/user/profile/root","name":"UserProfileFacade","line":38,"character":21},{"__symbolic":"reference","module":"@spartacus/core","name":"GlobalMessageService","line":38,"character":40}]}]}}}]}],"declarations":[{"__symbolic":"reference","name":"UpdateProfileComponent"}]}]}],"members":{}},"UserProfileComponentsModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":9,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"RegisterComponentModule"},{"__symbolic":"reference","name":"UpdateProfileModule"},{"__symbolic":"reference","name":"UpdateEmailModule"},{"__symbolic":"reference","name":"UpdatePasswordModule"},{"__symbolic":"reference","name":"ForgotPasswordModule"},{"__symbolic":"reference","name":"ResetPasswordModule"},{"__symbolic":"reference","name":"CloseAccountModule"}]}]}],"members":{}}},"origins":{"CloseAccountModule":"./close-account/close-account.module","CloseAccountModalComponent":"./close-account/components/close-account-modal/close-account-modal.component","CloseAccountComponent":"./close-account/components/close-account/close-account.component","ForgotPasswordComponentService":"./forgot-password/forgot-password-component.service","ForgotPasswordComponent":"./forgot-password/forgot-password.component","ForgotPasswordModule":"./forgot-password/forgot-password.module","RegisterComponent":"./register/register.component","RegisterComponentModule":"./register/register.module","ResetPasswordComponentService":"./reset-password/reset-password-component.service","ResetPasswordComponent":"./reset-password/reset-password.component","ResetPasswordModule":"./reset-password/reset-password.module","UpdateEmailComponentService":"./update-email/update-email-component.service","UpdateEmailComponent":"./update-email/update-email.component","UpdateEmailModule":"./update-email/update-email.module","UpdatePasswordComponentService":"./update-password/update-password-component.service","UpdatePasswordComponent":"./update-password/update-password.component","UpdatePasswordModule":"./update-password/update-password.module","UpdateProfileComponentService":"./update-profile/update-profile-component.service","UpdateProfileComponent":"./update-profile/update-profile.component","UpdateProfileModule":"./update-profile/update-profile.module","UserProfileComponentsModule":"./user-profile-components.module"},"importAs":"@spartacus/user/profile/components"}