{"version":3,"file":"spartacus-user-profile-root.umd.js","sources":["../../../feature-libs/user/profile/root/feature-name.ts","../../../feature-libs/user/profile/root/facade/user-profile.facade.ts","../../../feature-libs/user/profile/root/facade/user-register.facade.ts","../../../feature-libs/user/profile/root/user-profile-root.module.ts","../../../feature-libs/user/profile/root/facade/user-email.facade.ts","../../../feature-libs/user/profile/root/facade/user-password.facade.ts","../../../feature-libs/user/profile/root/public_api.ts","../../../feature-libs/user/profile/root/spartacus-user-profile-root.ts"],"sourcesContent":["export const USER_PROFILE_FEATURE = 'userProfile';\nexport const USER_PROFILE_CORE_FEATURE = 'userProfileCore';\n","import { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title } from '../model/user-profile.model';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\nexport function UserProfileFacadeFactory() {\n  return facadeFactory({\n    facade: UserProfileFacade,\n    feature: USER_PROFILE_CORE_FEATURE,\n    methods: ['get', 'update', 'close', 'getTitles'],\n  });\n}\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: UserProfileFacadeFactory,\n})\nexport abstract class UserProfileFacade {\n  abstract get(): Observable<User | undefined>;\n\n  /**\n   * Updates the user's details.\n   *\n   * @param details User details to be updated.\n   */\n  abstract update(details: User): Observable<unknown>;\n\n  /**\n   * Closes the user account.\n   */\n  abstract close(): Observable<unknown>;\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  abstract getTitles(): Observable<Title[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title, UserSignUp } from '../model/user-profile.model';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\nexport function UserRegisterFacadeFactory() {\n  return facadeFactory({\n    facade: UserRegisterFacade,\n    feature: USER_PROFILE_CORE_FEATURE,\n    methods: ['register', 'registerGuest', 'getTitles'],\n  });\n}\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: UserRegisterFacadeFactory,\n})\nexport abstract class UserRegisterFacade {\n  /**\n   * Register a new user.\n   *\n   * @param submitFormData as UserRegisterFormData\n   */\n  abstract register(user: UserSignUp): Observable<User>;\n\n  /**\n   * Register a new user from guest.\n   *\n   * @param guid\n   * @param password\n   */\n  abstract registerGuest(guid: string, password: string): Observable<User>;\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  abstract getTitles(): Observable<Title[]>;\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  provideDefaultConfigFactory,\n  UserProfileFacadeTransitionalToken,\n  UserRegisterFacadeTransitionalToken,\n} from '@spartacus/core';\nimport { UserProfileFacade } from './facade/user-profile.facade';\nimport { UserRegisterFacade } from './facade/user-register.facade';\nimport {\n  USER_PROFILE_CORE_FEATURE,\n  USER_PROFILE_FEATURE,\n} from './feature-name';\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nexport function defaultUserProfileComponentsConfig(): CmsConfig {\n  const config: CmsConfig = {\n    featureModules: {\n      [USER_PROFILE_FEATURE]: {\n        cmsComponents: [\n          'RegisterCustomerComponent',\n          'UpdateProfileComponent',\n          'UpdateEmailComponent',\n          'UpdatePasswordComponent',\n          'ForgotPasswordComponent',\n          'ResetPasswordComponent',\n          'CloseAccountComponent',\n        ],\n      },\n      // by default core is bundled together with components\n      [USER_PROFILE_CORE_FEATURE]: USER_PROFILE_FEATURE,\n    },\n  };\n  return config;\n}\n\n@NgModule({\n  providers: [\n    provideDefaultConfigFactory(defaultUserProfileComponentsConfig),\n    {\n      provide: UserProfileFacadeTransitionalToken,\n      useExisting: UserProfileFacade,\n    },\n    {\n      provide: UserRegisterFacadeTransitionalToken,\n      useExisting: UserRegisterFacade,\n    },\n  ],\n})\nexport class UserProfileRootModule {}\n","import { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\nexport function UserEmailFacadeFactory() {\n  return facadeFactory({\n    facade: UserEmailFacade,\n    feature: USER_PROFILE_CORE_FEATURE,\n    methods: ['update'],\n  });\n}\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: UserEmailFacadeFactory,\n})\nexport abstract class UserEmailFacade {\n  /**\n   * Updates the user's email.\n   *\n   * @param password to users password to confirm the users\n   * @param newUid the new proposed email address.\n   */\n  abstract update(password: string, newUid: string): Observable<unknown>;\n}\n","import { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { USER_PROFILE_CORE_FEATURE } from '../feature-name';\n\nexport function UserPasswordFacadeFactory() {\n  return facadeFactory({\n    facade: UserPasswordFacade,\n    feature: USER_PROFILE_CORE_FEATURE,\n    methods: ['update', 'reset', 'requestForgotPasswordEmail'],\n  });\n}\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: UserPasswordFacadeFactory,\n})\nexport abstract class UserPasswordFacade {\n  /**\n   * Updates the password for the user\n   *\n   * The method returns an observable with `LoaderState` information, including the\n   * actual user data.\n   *\n   * @param oldPassword the current password that will be changed\n   * @param newPassword the new password\n   */\n  abstract update(\n    oldPassword: string,\n    newPassword: string\n  ): Observable<unknown>;\n\n  /**\n   * Reset new password. Part of the forgot password flow.\n   *\n   * @param token\n   * @param password\n   */\n  abstract reset(token: string, password: string): Observable<unknown>;\n\n  /*\n   * Request an email to reset a forgotten password.\n   */\n  abstract requestForgotPasswordEmail(email: string): Observable<unknown>;\n}\n","export * from './index';\n\n/** AUGMENTABLE_TYPES_START */\nexport { Title, UserSignUp } from './model/user-profile.model';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["facadeFactory","Injectable","NgModule","provideDefaultConfigFactory","UserProfileFacadeTransitionalToken","UserRegisterFacadeTransitionalToken"],"mappings":";;;;;;QAAa,oBAAoB,GAAG,cAAc;QACrC,yBAAyB,GAAG;;aCMzB,wBAAwB;QACtC,OAAOA,kBAAa,CAAC;YACnB,MAAM,EAAE,iBAAiB;YACzB,OAAO,EAAE,yBAAyB;YAClC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;;QAMD;;;;;;gBAJCC,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,wBAAwB;iBACrC;;;aCXe,yBAAyB;QACvC,OAAOD,kBAAa,CAAC;YACnB,MAAM,EAAE,kBAAkB;YAC1B,OAAO,EAAE,yBAAyB;YAClC,OAAO,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,WAAW,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;;QAMD;;;;;;gBAJCC,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,yBAAyB;iBACtC;;;ICJD;aACgB,kCAAkC;;QAChD,IAAM,MAAM,GAAc;YACxB,cAAc;gBACZ,GAAC,oBAAoB,IAAG;oBACtB,aAAa,EAAE;wBACb,2BAA2B;wBAC3B,wBAAwB;wBACxB,sBAAsB;wBACtB,yBAAyB;wBACzB,yBAAyB;wBACzB,wBAAwB;wBACxB,uBAAuB;qBACxB;iBACF;;gBAED,GAAC,yBAAyB,IAAG,oBAAoB;mBAClD;SACF,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;;QAeD;;;;;gBAbCC,WAAQ,SAAC;oBACR,SAAS,EAAE;wBACTC,gCAA2B,CAAC,kCAAkC,CAAC;wBAC/D;4BACE,OAAO,EAAEC,uCAAkC;4BAC3C,WAAW,EAAE,iBAAiB;yBAC/B;wBACD;4BACE,OAAO,EAAEC,wCAAmC;4BAC5C,WAAW,EAAE,kBAAkB;yBAChC;qBACF;iBACF;;;aC3Ce,sBAAsB;QACpC,OAAOL,kBAAa,CAAC;YACnB,MAAM,EAAE,eAAe;YACvB,OAAO,EAAE,yBAAyB;YAClC,OAAO,EAAE,CAAC,QAAQ,CAAC;SACpB,CAAC,CAAC;IACL,CAAC;;QAMD;;;;;;gBAJCC,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,sBAAsB;iBACnC;;;aCXe,yBAAyB;QACvC,OAAOD,kBAAa,CAAC;YACnB,MAAM,EAAE,kBAAkB;YAC1B,OAAO,EAAE,yBAAyB;YAClC,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,4BAA4B,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;;QAMD;;;;;;gBAJCC,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;oBAClB,UAAU,EAAE,yBAAyB;iBACtC;;;ICZD;;ICJA;;;;;;;;;;;;;;;;;;;;;;;;;"}