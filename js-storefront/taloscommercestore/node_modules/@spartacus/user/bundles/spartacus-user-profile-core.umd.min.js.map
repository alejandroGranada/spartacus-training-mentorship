{"version":3,"sources":["../../../feature-libs/user/profile/core/connectors/converters.ts","../../../feature-libs/user/profile/core/connectors/user-profile.adapter.ts","../../../feature-libs/user/profile/core/connectors/user-profile.connector.ts","../../../feature-libs/user/profile/core/facade/user-email.service.ts","../../../feature-libs/user/profile/core/facade/user-password.service.ts","../../../feature-libs/user/profile/core/facade/user-profile.service.ts","../../../feature-libs/user/profile/core/facade/user-register.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../feature-libs/user/profile/core/facade/facade-providers.ts","../../../feature-libs/user/profile/core/user-profile-core.module.ts"],"names":["USER_PROFILE_NORMALIZER","InjectionToken","USER_PROFILE_SERIALIZER","USER_SERIALIZER","USER_SIGN_UP_SERIALIZER","TITLE_NORMALIZER","UserProfileConnector","userProfileAdapter","this","prototype","update","username","user","register","registerGuest","guid","password","requestForgotPasswordEmail","userEmailAddress","resetPassword","token","newPassword","updateEmail","userId","currentPassword","newUserId","updatePassword","oldPassword","remove","close","getTitles","loadTitles","Injectable","UserProfileAdapter","UserEmailService","userIdService","userProfileConnector","command","_this","updateCommand","create","payload","takeUserId","pipe","switchMap","uid","newUid","strategy","CommandStrategy","Queue","execute","UserIdService","CommandService","UserPasswordService","take","resetCommand","requestForgotPasswordEmailCommand","email","reset","UserProfileService","userAccountService","authService","eventService","query","details","tap","dispatch","UserAccountChangedEvent","closeCommand","logout","titleQuery","reloadOn","LanguageSetEvent","get","undefined","map","titles","UserAccountFacade","AuthService","EventService","QueryService","UserRegisterService","userProfile","userConnector","store","registerCommand","_a","UserActions","RegisterUserSuccess","registerGuestCommand","loginWithCredentials","Store","Object","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","facadeProviders","provide","UserEmailFacade","useExisting","UserPasswordFacade","UserProfileFacade","UserRegisterFacade","NgModule","args","providers","arguments","length","concat","__spread"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Title, UserSignUp } from '@spartacus/user/profile/root';\n\nexport const USER_PROFILE_NORMALIZER = new InjectionToken<Converter<User, any>>(\n  'UserProfileNormalizer'\n);\n\nexport const USER_PROFILE_SERIALIZER = new InjectionToken<Converter<User, any>>(\n  'UserProfileSerializer'\n);\n\nexport const USER_SERIALIZER = new InjectionToken<Converter<User, any>>(\n  'UserSerializer'\n);\n\nexport const USER_SIGN_UP_SERIALIZER = new InjectionToken<\n  Converter<UserSignUp, any>\n>('UserSignUpSerializer');\n\nexport const TITLE_NORMALIZER = new InjectionToken<Converter<any, Title>>(\n  'TitleNormalizer'\n);\n","import { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title, UserSignUp } from '@spartacus/user/profile/root';\n\nexport abstract class UserProfileAdapter {\n  abstract update(username: string, user: User): Observable<unknown>;\n\n  abstract register(user: UserSignUp): Observable<User>;\n\n  abstract registerGuest(guid: string, password: string): Observable<User>;\n\n  abstract requestForgotPasswordEmail(\n    userEmailAddress: string\n  ): Observable<unknown>;\n\n  abstract resetPassword(\n    token: string,\n    newPassword: string\n  ): Observable<unknown>;\n\n  abstract updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<unknown>;\n\n  abstract updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<unknown>;\n\n  abstract close(userId: string): Observable<unknown>;\n\n  abstract loadTitles(): Observable<Title[]>;\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title, UserSignUp } from '@spartacus/user/profile/root';\nimport { UserProfileAdapter } from './user-profile.adapter';\n\n@Injectable()\nexport class UserProfileConnector {\n  constructor(protected userProfileAdapter: UserProfileAdapter) {}\n\n  update(username: string, user: User): Observable<unknown> {\n    return this.userProfileAdapter.update(username, user);\n  }\n\n  register(user: UserSignUp): Observable<User> {\n    return this.userProfileAdapter.register(user);\n  }\n\n  registerGuest(guid: string, password: string): Observable<User> {\n    return this.userProfileAdapter.registerGuest(guid, password);\n  }\n\n  requestForgotPasswordEmail(userEmailAddress: string): Observable<unknown> {\n    return this.userProfileAdapter.requestForgotPasswordEmail(userEmailAddress);\n  }\n\n  resetPassword(token: string, newPassword: string): Observable<unknown> {\n    return this.userProfileAdapter.resetPassword(token, newPassword);\n  }\n\n  updateEmail(\n    userId: string,\n    currentPassword: string,\n    newUserId: string\n  ): Observable<unknown> {\n    return this.userProfileAdapter.updateEmail(\n      userId,\n      currentPassword,\n      newUserId\n    );\n  }\n\n  updatePassword(\n    userId: string,\n    oldPassword: string,\n    newPassword: string\n  ): Observable<unknown> {\n    return this.userProfileAdapter.updatePassword(\n      userId,\n      oldPassword,\n      newPassword\n    );\n  }\n\n  remove(userId: string): Observable<unknown> {\n    return this.userProfileAdapter.close(userId);\n  }\n\n  getTitles(): Observable<Title[]> {\n    return this.userProfileAdapter.loadTitles();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Command,\n  CommandService,\n  CommandStrategy,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { UserEmailFacade } from '@spartacus/user/profile/root';\nimport { UserProfileConnector } from '../connectors/user-profile.connector';\n\n@Injectable()\nexport class UserEmailService implements UserEmailFacade {\n  constructor(\n    protected userIdService: UserIdService,\n    protected userProfileConnector: UserProfileConnector,\n    protected command: CommandService\n  ) {}\n\n  protected updateCommand: Command<{\n    password: string;\n    newUid: string;\n  }> = this.command.create(\n    (payload) =>\n      this.userIdService\n        .takeUserId(true)\n        .pipe(\n          switchMap((uid) =>\n            this.userProfileConnector.updateEmail(\n              uid,\n              payload.password,\n              payload.newUid\n            )\n          )\n        ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  /**\n   * Updates the user's email.\n   *\n   * @param password to users password to confirm the users\n   * @param newUid the new proposed email address.\n   */\n  update(password: string, newUid: string): Observable<unknown> {\n    return this.updateCommand.execute({ password, newUid });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Command, CommandService, UserIdService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { UserPasswordFacade } from '@spartacus/user/profile/root';\nimport { UserProfileConnector } from '../connectors/user-profile.connector';\n\n@Injectable()\nexport class UserPasswordService implements UserPasswordFacade {\n  protected updateCommand: Command<{\n    oldPassword: string;\n    newPassword: string;\n  }> = this.command.create((payload) =>\n    this.userIdService.takeUserId(true).pipe(\n      take(1),\n      switchMap((uid) =>\n        this.userProfileConnector.updatePassword(\n          uid,\n          payload.oldPassword,\n          payload.newPassword\n        )\n      )\n    )\n  );\n\n  protected resetCommand: Command<{\n    token: string;\n    password: string;\n  }> = this.command.create((payload) =>\n    this.userProfileConnector.resetPassword(payload.token, payload.password)\n  );\n\n  protected requestForgotPasswordEmailCommand: Command<{\n    email: string;\n  }> = this.command.create((payload) =>\n    this.userProfileConnector.requestForgotPasswordEmail(payload.email)\n  );\n\n  constructor(\n    protected userProfileConnector: UserProfileConnector,\n    protected userIdService: UserIdService,\n    protected command: CommandService\n  ) {}\n\n  /**\n   * Updates the password for the user\n   *\n   * The method returns an observable with `LoaderState` information, including the\n   * actual user data.\n   *\n   * @param oldPassword the current password that will be changed\n   * @param newPassword the new password\n   */\n  update(oldPassword: string, newPassword: string): Observable<unknown> {\n    return this.updateCommand.execute({ oldPassword, newPassword });\n  }\n\n  /**\n   * Reset new password. Part of the forgot password flow.\n   *\n   * @param token\n   * @param password\n   */\n  reset(token: string, password: string): Observable<unknown> {\n    return this.resetCommand.execute({ token, password });\n  }\n\n  /*\n   * Request an email to reset a forgotten password.\n   */\n  requestForgotPasswordEmail(email: string): Observable<unknown> {\n    return this.requestForgotPasswordEmailCommand.execute({ email });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AuthService,\n  Command,\n  CommandService,\n  CommandStrategy,\n  EventService,\n  LanguageSetEvent,\n  Query,\n  QueryService,\n  UserIdService,\n} from '@spartacus/core';\nimport {\n  User,\n  UserAccountChangedEvent,\n  UserAccountFacade,\n} from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { Title, UserProfileFacade } from '@spartacus/user/profile/root';\nimport { UserProfileConnector } from '../connectors/user-profile.connector';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class UserProfileService implements UserProfileFacade {\n  protected updateCommand: Command<{ details: User }> = this.command.create(\n    (payload) =>\n      this.userIdService.takeUserId(true).pipe(\n        switchMap((uid) =>\n          this.userProfileConnector.update(uid, payload.details).pipe(\n            tap(() => {\n              this.eventService.dispatch(\n                { user: payload.details },\n                UserAccountChangedEvent\n              );\n            })\n          )\n        )\n      ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  protected closeCommand: Command = this.command.create(() =>\n    this.userIdService\n      .takeUserId(true)\n      .pipe(\n        switchMap((uid) =>\n          this.userProfileConnector\n            .remove(uid)\n            .pipe(tap(() => this.authService.logout()))\n        )\n      )\n  );\n\n  protected titleQuery: Query<Title[]> = this.query.create(\n    () => this.userProfileConnector.getTitles(),\n    {\n      reloadOn: [LanguageSetEvent],\n    }\n  );\n\n  constructor(\n    protected userAccountService: UserAccountFacade,\n    protected authService: AuthService,\n    protected userProfileConnector: UserProfileConnector,\n    protected eventService: EventService,\n    protected userIdService: UserIdService,\n    protected query: QueryService,\n    protected command: CommandService\n  ) {}\n\n  get(): Observable<User | undefined> {\n    return this.userAccountService.get();\n  }\n\n  /**\n   * Updates the user's details.\n   *\n   * @param details User details to be updated.\n   */\n  update(details: User): Observable<unknown> {\n    return this.updateCommand.execute({ details });\n  }\n\n  /**\n   * Closes the user account.\n   */\n  close(): Observable<unknown> {\n    return this.closeCommand.execute(undefined);\n  }\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  getTitles(): Observable<Title[]> {\n    return this.titleQuery.get().pipe(map((titles) => titles ?? []));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AuthService,\n  Command,\n  CommandService,\n  UserActions,\n} from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport {\n  Title,\n  UserRegisterFacade,\n  UserSignUp,\n} from '@spartacus/user/profile/root';\nimport { UserProfileConnector } from '../connectors/user-profile.connector';\nimport { tap } from 'rxjs/operators';\nimport { UserProfileService } from './user-profile.service';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class UserRegisterService implements UserRegisterFacade {\n  protected registerCommand: Command<\n    { user: UserSignUp },\n    User\n  > = this.command.create(({ user }) =>\n    this.userConnector.register(user).pipe(\n      tap(() => {\n        // this is a compatibility mechanism only, to make anonymous consents\n        // management work properly in transitional period (when we move logic\n        // to separate libraries)\n        this.store.dispatch(new UserActions.RegisterUserSuccess());\n      })\n    )\n  );\n\n  protected registerGuestCommand: Command<\n    {\n      guid: string;\n      password: string;\n    },\n    User\n  > = this.command.create((payload) =>\n    this.userConnector.registerGuest(payload.guid, payload.password).pipe(\n      tap((user) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.authService.loginWithCredentials(user.uid!, payload.password);\n      })\n    )\n  );\n\n  constructor(\n    protected userProfile: UserProfileService,\n    protected userConnector: UserProfileConnector,\n    protected authService: AuthService,\n    protected command: CommandService,\n    protected store: Store\n  ) {}\n\n  /**\n   * Register a new user.\n   *\n   * @param submitFormData as UserRegisterFormData\n   */\n  register(user: UserSignUp): Observable<User> {\n    return this.registerCommand.execute({ user });\n  }\n\n  /**\n   * Register a new user from guest.\n   *\n   * @param guid\n   * @param password\n   */\n  registerGuest(guid: string, password: string): Observable<User> {\n    return this.registerGuestCommand.execute({ guid, password });\n  }\n\n  /**\n   * Returns titles that can be used for the user profiles.\n   */\n  getTitles(): Observable<Title[]> {\n    return this.userProfile.getTitles();\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { UserEmailService } from './user-email.service';\nimport { UserPasswordService } from './user-password.service';\nimport { UserProfileService } from './user-profile.service';\nimport { UserRegisterService } from './user-register.service';\nimport {\n  UserEmailFacade,\n  UserPasswordFacade,\n  UserProfileFacade,\n  UserRegisterFacade,\n} from '@spartacus/user/profile/root';\nimport { Provider } from '@angular/core';\n\nexport const facadeProviders: Provider[] = [\n  UserEmailService,\n  UserPasswordService,\n  UserProfileService,\n  UserRegisterService,\n  {\n    provide: UserEmailFacade,\n    useExisting: UserEmailService,\n  },\n  {\n    provide: UserPasswordFacade,\n    useExisting: UserPasswordService,\n  },\n  {\n    provide: UserProfileFacade,\n    useExisting: UserProfileService,\n  },\n  {\n    provide: UserRegisterFacade,\n    useExisting: UserRegisterService,\n  },\n];\n","import { NgModule } from '@angular/core';\nimport { UserProfileConnector } from './connectors/user-profile.connector';\nimport { facadeProviders } from './facade/facade-providers';\n\n@NgModule({\n  providers: [UserProfileConnector, ...facadeProviders],\n})\nexport class UserProfileCoreModule {}\n"]}