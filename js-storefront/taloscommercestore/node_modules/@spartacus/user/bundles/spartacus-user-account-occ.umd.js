(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@spartacus/core'), require('@spartacus/user/account/core'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@spartacus/user/account/occ', ['exports', '@angular/common/http', '@angular/core', '@spartacus/core', '@spartacus/user/account/core', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.user = global.spartacus.user || {}, global.spartacus.user.account = global.spartacus.user.account || {}, global.spartacus.user.account.occ = {}), global.ng.common.http, global.ng.core, global.core, global.spartacus.user.account.core, global.rxjs, global.rxjs.operators));
}(this, (function (exports, http, core$2, core, core$1, rxjs, operators) { 'use strict';

    var defaultOccUserAccountConfig = {
        backend: {
            occ: { endpoints: { user: 'users/${userId}' } },
        },
    };

    var OccUserAccountAdapter = /** @class */ (function () {
        function OccUserAccountAdapter(http, occEndpoints, converter) {
            this.http = http;
            this.occEndpoints = occEndpoints;
            this.converter = converter;
        }
        OccUserAccountAdapter.prototype.load = function (userId) {
            var url = this.occEndpoints.getUrl('user', { userId: userId });
            return this.http.get(url).pipe(operators.catchError(function (error) { return rxjs.throwError(core.normalizeHttpError(error)); }), this.converter.pipeable(core$1.USER_ACCOUNT_NORMALIZER));
        };
        return OccUserAccountAdapter;
    }());
    OccUserAccountAdapter.decorators = [
        { type: core$2.Injectable }
    ];
    OccUserAccountAdapter.ctorParameters = function () { return [
        { type: http.HttpClient },
        { type: core.OccEndpointsService },
        { type: core.ConverterService }
    ]; };

    var UserAccountOccModule = /** @class */ (function () {
        function UserAccountOccModule() {
        }
        return UserAccountOccModule;
    }());
    UserAccountOccModule.decorators = [
        { type: core$2.NgModule, args: [{
                    providers: [
                        core.provideDefaultConfig(defaultOccUserAccountConfig),
                        { provide: core$1.UserAccountAdapter, useClass: OccUserAccountAdapter },
                    ],
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.OccUserAccountAdapter = OccUserAccountAdapter;
    exports.UserAccountOccModule = UserAccountOccModule;
    exports.defaultOccUserAccountConfig = defaultOccUserAccountConfig;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-user-account-occ.umd.js.map
