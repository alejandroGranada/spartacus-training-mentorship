import { HttpClient } from '@angular/common/http';
import { Injectable, NgModule } from '@angular/core';
import { normalizeHttpError, OccEndpointsService, ConverterService, provideDefaultConfig } from '@spartacus/core';
import { USER_ACCOUNT_NORMALIZER, UserAccountAdapter } from '@spartacus/user/account/core';
import { throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';

const defaultOccUserAccountConfig = {
    backend: {
        occ: { endpoints: { user: 'users/${userId}' } },
    },
};

class OccUserAccountAdapter {
    constructor(http, occEndpoints, converter) {
        this.http = http;
        this.occEndpoints = occEndpoints;
        this.converter = converter;
    }
    load(userId) {
        const url = this.occEndpoints.getUrl('user', { userId });
        return this.http.get(url).pipe(catchError((error) => throwError(normalizeHttpError(error))), this.converter.pipeable(USER_ACCOUNT_NORMALIZER));
    }
}
OccUserAccountAdapter.decorators = [
    { type: Injectable }
];
OccUserAccountAdapter.ctorParameters = () => [
    { type: HttpClient },
    { type: OccEndpointsService },
    { type: ConverterService }
];

class UserAccountOccModule {
}
UserAccountOccModule.decorators = [
    { type: NgModule, args: [{
                providers: [
                    provideDefaultConfig(defaultOccUserAccountConfig),
                    { provide: UserAccountAdapter, useClass: OccUserAccountAdapter },
                ],
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { OccUserAccountAdapter, UserAccountOccModule, defaultOccUserAccountConfig };
//# sourceMappingURL=spartacus-user-account-occ.js.map
