import { InjectionToken, Injectable, NgModule } from '@angular/core';
import { UserAccountChangedEvent, UserAccountFacade } from '@spartacus/user/account/root';
import { LoginEvent, LogoutEvent, UserIdService, QueryService } from '@spartacus/core';
import { switchMap } from 'rxjs/operators';

const USER_ACCOUNT_NORMALIZER = new InjectionToken('UserAccountNormalizer');
const USER_ACCOUNT_SERIALIZER = new InjectionToken('UserAccountSerializer');

class UserAccountAdapter {
}

class UserAccountConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    get(userId) {
        return this.adapter.load(userId);
    }
}
UserAccountConnector.decorators = [
    { type: Injectable }
];
UserAccountConnector.ctorParameters = () => [
    { type: UserAccountAdapter }
];

class UserAccountService {
    constructor(userAccountConnector, userIdService, query) {
        this.userAccountConnector = userAccountConnector;
        this.userIdService = userIdService;
        this.query = query;
        this.userQuery = this.query.create(() => this.userIdService
            .takeUserId(true)
            .pipe(switchMap((userId) => this.userAccountConnector.get(userId))), {
            reloadOn: [UserAccountChangedEvent],
            resetOn: [LoginEvent, LogoutEvent],
        });
    }
    /**
     * Returns the current user.
     */
    get() {
        return this.userQuery.get();
    }
}
UserAccountService.decorators = [
    { type: Injectable }
];
UserAccountService.ctorParameters = () => [
    { type: UserAccountConnector },
    { type: UserIdService },
    { type: QueryService }
];

const facadeProviders = [
    UserAccountService,
    {
        provide: UserAccountFacade,
        useExisting: UserAccountService,
    },
];

class UserAccountCoreModule {
}
UserAccountCoreModule.decorators = [
    { type: NgModule, args: [{
                providers: [UserAccountConnector, ...facadeProviders],
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { USER_ACCOUNT_NORMALIZER, USER_ACCOUNT_SERIALIZER, UserAccountAdapter, UserAccountConnector, UserAccountCoreModule, UserAccountService, facadeProviders as Éµa };
//# sourceMappingURL=spartacus-user-account-core.js.map
