import { ɵɵdefineInjectable, Injectable, NgModule } from '@angular/core';
import { facadeFactory, provideDefaultConfigFactory, UserAccountFacadeTransitionalToken, CxEvent } from '@spartacus/core';
import { PageLayoutModule } from '@spartacus/storefront';

const USER_ACCOUNT_FEATURE = 'userAccount';
const USER_ACCOUNT_CORE_FEATURE = 'userAccountCore';

function userAccountFacadeFactory() {
    return facadeFactory({
        facade: UserAccountFacade,
        feature: USER_ACCOUNT_CORE_FEATURE,
        methods: ['get'],
    });
}
class UserAccountFacade {
}
UserAccountFacade.ɵprov = ɵɵdefineInjectable({ factory: userAccountFacadeFactory, token: UserAccountFacade, providedIn: "root" });
UserAccountFacade.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
                useFactory: userAccountFacadeFactory,
            },] }
];

// TODO: Inline this factory when we start releasing Ivy compiled libraries
function defaultUserAccountComponentsConfig() {
    const config = {
        featureModules: {
            [USER_ACCOUNT_FEATURE]: {
                cmsComponents: [
                    'LoginComponent',
                    'ReturningCustomerLoginComponent',
                    'ReturningCustomerRegisterComponent',
                ],
            },
            // by default core is bundled together with components
            [USER_ACCOUNT_CORE_FEATURE]: USER_ACCOUNT_FEATURE,
        },
    };
    return config;
}
class UserAccountRootModule {
}
UserAccountRootModule.decorators = [
    { type: NgModule, args: [{
                imports: [PageLayoutModule],
                providers: [
                    provideDefaultConfigFactory(defaultUserAccountComponentsConfig),
                    {
                        provide: UserAccountFacadeTransitionalToken,
                        useExisting: UserAccountFacade,
                    },
                ],
            },] }
];

class UserAccountEvent extends CxEvent {
}
class UserAccountChangedEvent extends UserAccountEvent {
}
UserAccountChangedEvent.type = 'UserAccountChangedEvent';

/** AUGMENTABLE_TYPES_END */

/**
 * Generated bundle index. Do not edit.
 */

export { USER_ACCOUNT_CORE_FEATURE, USER_ACCOUNT_FEATURE, UserAccountChangedEvent, UserAccountEvent, UserAccountFacade, UserAccountRootModule, defaultUserAccountComponentsConfig, userAccountFacadeFactory };
//# sourceMappingURL=spartacus-user-account-root.js.map
